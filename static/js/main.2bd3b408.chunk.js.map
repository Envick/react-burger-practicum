{"version":3,"sources":["components/order-details/order-details.module.css","pages/home/home.module.css","pages/ingredient/ingredient.module.css","components/feed-item/feed-item.module.css","components/modal-profile-order/modal-profile-order.module.css","components/app-header/app-header.tsx","utils/hooks.ts","services/actions/ingredient-details.ts","components/burger-ingredient/burger-ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/done.png","components/order-details/order-details.tsx","services/actions/constructor-ingredients.ts","images/drag-icon.svg","components/constructor-ingredient/constructor-ingredient.tsx","utils/constants.ts","utils/utils.ts","services/actions/order-details.ts","components/burger-constructor/burger-constructor.tsx","pages/home/index.tsx","services/actions/auth.ts","pages/login/index.tsx","pages/register/index.tsx","pages/forgot-password/index.tsx","pages/reset-password/index.tsx","services/actions/profile.ts","pages/profile/index.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient/index.tsx","pages/page-not-found.tsx","components/protected-route/protected-route.tsx","components/modal-ingredient/modal-ingredient.tsx","services/actions/ingredients.ts","components/feed-item/index.tsx","services/actions/profile-orders.ts","pages/profile-orders/index.tsx","services/actions/feed.ts","pages/feed/index.tsx","pages/feed-item/index.tsx","components/modal-feed/index.tsx","pages/profile-orders-item/index.tsx","components/modal-profile-order/index.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/ingredients.ts","services/reducers/constructor-ingredients.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/auth.ts","services/reducers/profile.ts","services/reducers/profile-orders.ts","services/reducers/feed.ts","services/reducers/index.ts","services/middlewars/socket-middleware.ts","index.tsx","pages/profile/profile.module.css","components/modal-feed/modal-feed.module.css","components/app-header/app-header.module.css","pages/profile-orders/profile-orders.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/login/login.module.css","components/ingredient-details/ingredient-details.module.css","pages/feed/feed.module.css","components/burger-constructor/burger-constructor.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/burger-ingredient/burger-ingredients.module.css","components/modal/modal.module.css","components/modal-overlay/modal-overlay.module.css","components/constructor-ingredient/constructor-ingredient.module.css","pages/feed-item/feed-item.module.css"],"names":["module","exports","AppHeader","className","styles","mainHeader","mainNav","menuList","to","navItem","type","cabinetLink","useSelector","selectorHook","useDispatch","dispatchHook","SET_ACTIVE_INGREDIENT","BurgerIngredient","item","ingredientClickHandler","useDrag","dragRef","constructorIngredientsState","state","constructorIngredients","getIngredientCount","useCallback","bun","_id","ingredients","filter","el","length","ref","burgerCard","onClick","count","size","src","alt","countText","titleContainer","name","BurgerIngredients","useState","current","setCurrent","navigate","useNavigate","dispatch","ingredientsRef","useRef","bunRef","sauceRef","mainRef","tabClickHandler","value","scrollIntoView","behavior","payload","background","store","scrollHandler","containerTopMargin","getBoundingClientRect","top","position","closer","document","querySelectorAll","forEach","elHeight","topPosition","Math","abs","id","useEffect","addEventListener","removeEventListener","ingredientsBlock","tabs","active","ingredientItems","itemsContainer","map","ModalOverlay","isOpen","toggleModal","modalOverlay","showOverlay","root","querySelector","Modal","headerSize","headerText","children","escClickHandler","e","key","preventDefault","modal","showModal","modalHeader","modalClose","ReactDOM","createPortal","OrderDetails","orderDetails","order","number","doneImg","ADD_CONSTRUCTOR_INGREDIENT","ADD_CONSTRUCTOR_BUN","REPLACE_CONSTRUCTOR_BUN","CHANGE_CONSTRUCTOR_INGREDIENT_POSITION","REMOVE_CONSTRUCTOR_INGREDIENT","CLEAR_CONSTRUCTOR","ConstructorIngredient","handleDeleteElement","index","moveIngredient","useDrop","accept","hover","monitor","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","drop","drag","innerBurgerElement","icon","dragIcon","text","price","thumbnail","handleClose","ROOT_URL","setCookie","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","checkResponse","res","ok","json","then","err","Promise","reject","refreshToken","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","retriableFetch","url","a","options","result","Error","message","refreshData","setItem","accessToken","split","authorization","sendResetEmail","form","sendResetPasword","TAKE_ORDER","ORDER_FAILED","ORDER_SUCCESS","BurgerConstructor","setShowModal","isAuth","auth","burgerConstructorState","totalPrice","useMemo","reduce","acc","collect","isHover","isOver","dropRef","toggleOrderModal","border","style","burgerConstructor","burger","isLocked","innerBurgerContainer","renderIngredients","Boolean","offer","offerPrice","burgerOrder","success","catch","takeOrder","Home","burgerSectionContainer","DndProvider","backend","HTML5Backend","REGISTER_REQUEST","REGISTER_REQUEST_SUCCESS","REGISTER_REQUEST_FAILED","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILED","LOGOUT_REQUEST","LOGOUT_REQUEST_SUCCESS","LOGOUT_REQUEST_FAILED","logout","Login","useLocation","email","password","setForm","onChange","target","from","onSubmit","login","formMainText","placeholder","buttonContainer","bottomText","formLink","Register","register","ForgotPassword","fromForgotPassword","console","log","ResetPassword","location","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_REQUEST_SUCCESS","UPDATE_PROFILE_REQUEST_FAILED","GET_PROFILE_REQUEST","GET_PROFILE_REQUEST_SUCCESS","GET_PROFILE_REQUEST_FAILED","Profile","profile","profileRequest","user","profileContent","aside","asideMenus","asideLink","href","updateProfile","profileOptions","buttons","cancelButton","IngredientDetails","ingredient","ingredientsModalBody","image_large","composition","compositionItem","calories","proteins","fat","carbohydrates","Ingredient","useParams","find","headText","PageNotFound","ProtectedRoute","ModalIngredient","activeIngredient","GET_INGREDIENTS","GET_INGREDIENTS_FAILED","GET_INGREDIENTS_SUCCESS","FeedItem","isShowStatus","createdAt","status","allIngredients","feedIngredients","orderIngredient","orderPrice","feedItem","header","toLocaleDateString","main","slice","feedMoreContainer","feedImageContainer","feedImage","image","random","WS_ORDERS_CONNECTION_CLOSED","WS_ORDERS_CONNECTION_ERROR","WS_ORDERS_CONNECTION_START","WS_ORDERS_CONNECTION_SUCCESS","WS_ORDERS_GET_MESSAGE","ProfileOrders","orders","profileOrders","feedClickHandler","feedBackground","profileOrdersContent","WS_FEED_CONNECTION_CLOSED","WS_FEED_CONNECTION_ERROR","WS_FEED_CONNECTION_START","WS_FEED_CONNECTION_SUCCESS","WS_FEED_GET_MESSAGE","Feed","feed","totalSum","totalTodaySum","feedContent","feedInfo","feedReadiness","feedReady","feedPending","activeFeed","feedNumber","feedIngredient","toLocaleString","ModalFeed","ProfileOrdersItem","ModalProfileOrder","AppRoutes","path","element","App","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsRequest","ingredientsFailed","orderDetailsRequest","orderDetailsFailed","registerRequest","registerFailed","loginRequest","loginFailed","logoutFailed","logoutRequest","profileFailed","wsOrdersConnected","rootReducer","combineReducers","action","total","totalToday","floor","splice","ingredientDetails","authToken","removeItem","socketMiddleware","wsUrl","wsActions","socket","next","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","wsOrdersActions","wsFeedActions","enhancer","applyMiddleware","thunk","createStore","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bd3b408.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__oW3LT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerSectionContainer\":\"home_burgerSectionContainer__1LgGl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headText\":\"ingredient_headText__cQ6hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedItem\":\"feed-item_feedItem__2kKWC\",\"header\":\"feed-item_header__2MtdK\",\"ingredients\":\"feed-item_ingredients__3xZjf\",\"feedImageContainer\":\"feed-item_feedImageContainer__dM09i\",\"feedImage\":\"feed-item_feedImage__1heUe\",\"feedMoreContainer\":\"feed-item_feedMoreContainer__1l_vr\",\"count\":\"feed-item_count__3IVPa\",\"bottom\":\"feed-item_bottom__3riKN\",\"price\":\"feed-item_price__HCifO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"modal-profile-order_count__2ACqi\",\"feedIngredients\":\"modal-profile-order_feedIngredients__upqPv\",\"feedImageContainer\":\"modal-profile-order_feedImageContainer__3JNXZ\",\"feedImage\":\"modal-profile-order_feedImage__5AXIV\",\"feedIngredient\":\"modal-profile-order_feedIngredient__QNQxj\",\"bottom\":\"modal-profile-order_bottom__U3UjT\",\"status\":\"modal-profile-order_status__3p5US\"};","import React from 'react';\r\nimport {BurgerIcon, ListIcon, Logo, ProfileIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './app-header.module.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction AppHeader() {\r\n    return (\r\n        <header className={`pb-4 pt-4 ${styles.mainHeader}`}>\r\n            <div className=\"container\">\r\n                <nav className={styles.mainNav}>\r\n                    <div className={styles.menuList}>\r\n                        <Link to={\"/\"} className={`${styles.navItem} pl-5 pt-4 pr-5 pb-4`}>\r\n                            <BurgerIcon type=\"primary\"/>\r\n                            <span  className=\"pl-2 text text_type_main-default\">Конструктор</span>\r\n                        </Link>\r\n                        <Link to=\"/feed\" className={`${styles.navItem} pl-5 pt-4 pr-5 pb-4`}>\r\n                            <ListIcon type=\"secondary\"/>\r\n                            <span className=\"pl-2 text text_type_main-default text_color_inactive\">Лента заказов</span>\r\n                        </Link>\r\n                    </div>\r\n                    <Logo/>\r\n                    <Link to=\"/profile\" className={`${styles.navItem} ${styles.cabinetLink}`}>\r\n                        <ProfileIcon type=\"secondary\" />\r\n                        <span className=\"pl-2 text text_type_main-default text_color_inactive\">Личный кабинет</span>\r\n                    </Link>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","// hooks.ts\r\nimport {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\n\r\nimport {TAppDispatch, TRootState} from \"./constants\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {TAuthActions} from \"../services/actions/auth\";\r\nimport {TConstructorIngredientsActions} from \"../services/actions/constructor-ingredients\";\r\nimport {TIngredientActions} from \"../services/actions/ingredients\";\r\nimport {TIngredientDetailsActions} from \"../services/actions/ingredient-details\";\r\nimport {TOrderActions} from \"../services/actions/order-details\";\r\nimport {TProfileActions} from \"../services/actions/profile\";\r\nimport {TProfileOrdersActions} from \"../services/actions/profile-orders\";\r\nimport {Action, ActionCreator} from \"redux\";\r\nimport {TFeedActions} from \"../services/actions/feed\";\r\n\r\n\r\n\r\nexport const useSelector: TypedUseSelectorHook<TRootState> = selectorHook;\r\n\r\nexport type TAppActions =\r\n    TAuthActions |\r\n    TConstructorIngredientsActions |\r\n    TIngredientActions |\r\n    TIngredientDetailsActions |\r\n    TOrderActions |\r\n    TProfileActions |\r\n    TProfileOrdersActions |\r\n    TFeedActions |\r\n    TProfileOrdersActions\r\n\r\nexport type TAppThunk<ReturnType = void> = ActionCreator<\r\n        ThunkAction<\r\n            ReturnType,\r\n            TRootState,\r\n            unknown,\r\n            TAppActions\r\n        >\r\n    >\r\n\r\nexport const useDispatch = () => dispatchHook<TAppDispatch>();","import {TIngredient} from \"../../utils/constants\";\r\n\r\nexport const SET_ACTIVE_INGREDIENT = 'SET_ACTIVE_INGREDIENT'\r\n\r\nexport interface ISET_ACTIVE_INGREDIENT {\r\n    readonly type: typeof SET_ACTIVE_INGREDIENT\r\n    payload: TIngredient\r\n}\r\n\r\nexport type TIngredientDetailsActions = ISET_ACTIVE_INGREDIENT","import React, {FC, useCallback} from 'react';\r\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\nimport {useDrag} from \"react-dnd\";\r\nimport styles from './burger-ingredients.module.css'\r\nimport {useSelector} from \"../../utils/hooks\";\r\n\r\ninterface TBurgerIngredientProps {\r\n    item: TIngredient,\r\n    ingredientClickHandler: (item: TIngredient) => void\r\n}\r\n\r\nconst BurgerIngredient: FC<TBurgerIngredientProps> = ({item, ingredientClickHandler}) => {\r\n\r\n    const [,dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: item\r\n    })\r\n\r\n    const constructorIngredientsState = useSelector((state) => state.constructorIngredients)\r\n\r\n    const getIngredientCount = useCallback(() => {\r\n        if(item.type === 'bun'){\r\n            return constructorIngredientsState.bun?._id === item['_id'] ? 1 : 0\r\n        }else{\r\n            return constructorIngredientsState.ingredients.filter((el:TIngredient) => el['_id'] === item['_id']).length\r\n        }\r\n    }, [constructorIngredientsState.bun, constructorIngredientsState.ingredients])\r\n\r\n    return (\r\n        <div ref={dragRef}  className={`${styles.burgerCard} burger-card`} onClick={() => ingredientClickHandler(item)}>\r\n            <Counter\r\n                count={getIngredientCount()}\r\n                size=\"default\"\r\n            />\r\n            <div className=\"pr-4 pl-4 mb-1\">\r\n                <img src={item[\"image\"]} alt={item[\"name\"]}/>\r\n            </div>\r\n            <div className={`${styles.count} mb-1`}>\r\n                <span className={`${styles.countText} mr-2 text text_type_digits-default`}>{item[\"price\"]}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <div className={styles.titleContainer}>\r\n                <span className=\"text text_type_main-default\">{item.name}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurgerIngredient;","import React, {useCallback, useEffect, useRef, useState} from 'react';\r\nimport styles from './burger-ingredients.module.css'\r\nimport {Tab} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {SET_ACTIVE_INGREDIENT} from \"../../services/actions/ingredient-details\";\r\nimport BurgerIngredient from \"../burger-ingredient/burger-ingredient\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\nfunction BurgerIngredients() {\r\n    const [current, setCurrent] = useState<string>('bun')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ingredientsRef = useRef<HTMLDivElement>(null)\r\n    const bunRef = useRef<HTMLDivElement>(null)\r\n    const sauceRef = useRef<HTMLDivElement>(null)\r\n    const mainRef = useRef<HTMLDivElement>(null)\r\n\r\n    function tabClickHandler(value: string){\r\n        setCurrent(value)\r\n        if(value === 'bun'){\r\n            bunRef.current && bunRef.current.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n        else if(value === 'sauce'){\r\n            sauceRef.current && sauceRef.current.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n        else{\r\n            mainRef.current && mainRef.current.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }\r\n\r\n    function ingredientClickHandler(item: TIngredient){\r\n        dispatch({type: SET_ACTIVE_INGREDIENT, payload:item})\r\n        navigate(`/ingredients/${item._id}`, {state: {background: '/'}})\r\n    }\r\n\r\n    const ingredients = useSelector(store => store.ingredients.ingredients)\r\n    \r\n    const scrollHandler = useCallback(() => {\r\n        let containerTopMargin: number = ingredientsRef?.current?.getBoundingClientRect()?.top ?? 0\r\n        let position = containerTopMargin;\r\n        let closer = ''\r\n        document.querySelectorAll('.ingredient-text').forEach(item => {\r\n            let elHeight = item.getBoundingClientRect().top\r\n            let topPosition = Math.abs(containerTopMargin - elHeight)\r\n            if(topPosition < position){\r\n                position = topPosition\r\n                closer = item.id\r\n            }\r\n        })\r\n        if(closer){\r\n            setCurrent(closer)\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        ingredientsRef?.current?.addEventListener('scroll', scrollHandler)\r\n        return () => {\r\n            ingredientsRef?.current?.removeEventListener('scroll', scrollHandler)\r\n        }\r\n    },[dispatch, scrollHandler])\r\n\r\n    return (\r\n        <div className={`${styles.ingredientsBlock}`}>\r\n            <div className={`${styles.tabs} pb-10`}>\r\n                <Tab value=\"bun\" active={current === 'bun'} onClick={tabClickHandler}>\r\n                    Булка\r\n                </Tab>\r\n                <Tab value=\"sauce\" active={current === 'sauce'} onClick={tabClickHandler}>\r\n                    Соус\r\n                </Tab>\r\n                <Tab value=\"main\" active={current === 'main'} onClick={tabClickHandler}>\r\n                    Начинка\r\n                </Tab>\r\n            </div>\r\n\r\n            <div className={styles.ingredientItems} ref={ingredientsRef}>\r\n                <h2 className=\"text text_type_main-medium mb-6 ingredient-text\" id=\"bun\" ref={bunRef}>Булки</h2>\r\n                <div className={`${styles.itemsContainer} pl-4 pr-2 mb-10`}>\r\n                    {ingredients.map((item:TIngredient) => {\r\n                        if(item.type === 'bun'){\r\n                            return (\r\n                                <BurgerIngredient key={item['_id']} item={item} ingredientClickHandler={ingredientClickHandler}/>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n                <h2 className=\"text text_type_main-medium mb-6 ingredient-text\" id=\"sauce\" ref={sauceRef}>Соусы</h2>\r\n                <div className={`${styles.itemsContainer} pl-4 pr-2 mb-10`}>\r\n                    {ingredients.map((item:TIngredient) => {\r\n                        if(item.type === 'sauce'){\r\n                            return (\r\n                                <BurgerIngredient key={item['_id']} item={item} ingredientClickHandler={ingredientClickHandler}/>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n                <h2 className=\"text text_type_main-medium mb-6 ingredient-text\" id=\"main\" ref={mainRef}>Начинки</h2>\r\n                <div className={`${styles.itemsContainer} pl-4 pr-2 mb-10`}>\r\n                    {ingredients.map((item:TIngredient) => {\r\n                        if(item.type === 'main'){\r\n                            return (\r\n                                <BurgerIngredient key={item['_id']} item={item} ingredientClickHandler={ingredientClickHandler}/>\r\n                            )\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredients;","import React, {FC} from 'react';\r\nimport styles from './modal-overlay.module.css'\r\n\r\ninterface IModalOverlayProps {\r\n    isOpen: boolean,\r\n    toggleModal: () => void\r\n}\r\n\r\nconst ModalOverlay: FC<IModalOverlayProps> = ({isOpen, toggleModal}) => {\r\n    return (\r\n        <div onClick={toggleModal} className={`${styles.modalOverlay} ${isOpen && styles.showOverlay}`}/>\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;","import React, {FC, useCallback, useEffect} from 'react';\r\n\r\nimport styles from './modal.module.css'\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ReactDOM from 'react-dom';\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\n\r\ninterface IModalProps {\r\n    isOpen: boolean,\r\n    headerText?: string,\r\n    toggleModal: () => void,\r\n    headerSize?: string\r\n}\r\nconst root: HTMLElement | null = document.querySelector('#modals')\r\n\r\nconst  Modal: FC<IModalProps> = ({isOpen, headerSize = 'large',  headerText, toggleModal, children}) => {\r\n    const escClickHandler = useCallback((e: KeyboardEvent) => {\r\n        if(e.key === 'Escape' && isOpen){\r\n            toggleModal()\r\n        }\r\n        else{\r\n            e.preventDefault()\r\n        }\r\n    }, [isOpen, toggleModal])\r\n\r\n    useEffect(() => {\r\n\r\n        document.addEventListener('keydown', escClickHandler)\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', escClickHandler)\r\n        }\r\n    }, [escClickHandler])\r\n\r\n    const modal = (\r\n        <>\r\n            <div className={`${styles.modal} ${isOpen ? `${styles.showModal} show` : 'hide'} pt-5 pr-10 pl-10 modal`}>\r\n                <div className={styles.modalHeader}>\r\n                    <h1 className={`text text_type_main-${headerSize}`}>{headerText}</h1>\r\n                    <div className={styles.modalClose} onClick={toggleModal}>\r\n                        <CloseIcon type=\"primary\" />\r\n                    </div>\r\n                </div>\r\n                    {children}\r\n            </div>\r\n            <ModalOverlay toggleModal={toggleModal} isOpen={isOpen}/>\r\n        </>\r\n    )\r\n    return root && ReactDOM.createPortal(modal, root)\r\n}\r\n\r\nexport default Modal;","export default __webpack_public_path__ + \"static/media/done.dc2f52b0.png\";","import React from 'react';\r\n\r\nimport styles from './order-details.module.css'\r\n\r\nimport doneImg from '../../images/done.png'\r\nimport {useSelector} from \"../../utils/hooks\";\r\n\r\nfunction OrderDetails() {\r\n    const orderDetails = useSelector((state) => state.orderDetails.orderDetails)\r\n\r\n    return (\r\n        <div className={`${styles.orderDetails} pt-4`}>\r\n            <h2 className=\"text text_type_digits-large mb-8\">{orderDetails?.order?.number}</h2>\r\n            <span className=\"text text_type_main-medium mb-15\">идентификатор заказа</span>\r\n            <img className=\"mb-15\" src={doneImg} alt=\"\"/>\r\n            <span className=\"text text_type_main-default mb-2\">Ваш заказ начали готовить</span>\r\n            <span className=\"text text_type_main-default text_color_inactive mb-30\">Дождитесь готовности на орбитальной станции</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;","import {TIngredient} from \"../../utils/constants\";\r\n\r\nexport const ADD_CONSTRUCTOR_INGREDIENT = 'ADD_CONSTRUCTOR_INGREDIENT'\r\nexport const ADD_CONSTRUCTOR_BUN = 'ADD_CONSTRUCTOR_BUN'\r\nexport const REPLACE_CONSTRUCTOR_BUN = 'REPLACE_CONSTRUCTOR_BUN'\r\nexport const CHANGE_CONSTRUCTOR_INGREDIENT_POSITION = 'CHANGE_CONSTRUCTOR_INGREDIENT_POSITION'\r\nexport const REMOVE_CONSTRUCTOR_INGREDIENT = 'REMOVE_CONSTRUCTOR_INGREDIENT'\r\nexport const CLEAR_CONSTRUCTOR = 'CLEAR_CONSTRUCTOR'\r\n\r\nexport interface IADD_CONSTRUCTOR_INGREDIENT {\r\n    readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\r\n    payload: TIngredient\r\n}\r\nexport interface IADD_CONSTRUCTOR_BUN {\r\n    readonly type: typeof ADD_CONSTRUCTOR_BUN;\r\n    payload: TIngredient\r\n}\r\nexport interface IREPLACE_CONSTRUCTOR_BUN {\r\n    readonly type: typeof REPLACE_CONSTRUCTOR_BUN;\r\n    payload: TIngredient\r\n}\r\nexport interface ICHANGE_CONSTRUCTOR_INGREDIENT_POSITION {\r\n    readonly type: typeof CHANGE_CONSTRUCTOR_INGREDIENT_POSITION;\r\n    payload: {\r\n        hoverIndex: number,\r\n        dragIndex: number\r\n    }\r\n}\r\nexport interface IREMOVE_CONSTRUCTOR_INGREDIENT {\r\n    readonly type: typeof REMOVE_CONSTRUCTOR_INGREDIENT;\r\n    payload: number\r\n}\r\nexport interface ICLEAR_CONSTRUCTOR {\r\n    readonly type: typeof CLEAR_CONSTRUCTOR;\r\n}\r\n\r\nexport type TConstructorIngredientsActions =\r\n    IADD_CONSTRUCTOR_BUN |\r\n    IADD_CONSTRUCTOR_INGREDIENT |\r\n    IREMOVE_CONSTRUCTOR_INGREDIENT |\r\n    IREPLACE_CONSTRUCTOR_BUN |\r\n    ICHANGE_CONSTRUCTOR_INGREDIENT_POSITION |\r\n    ICLEAR_CONSTRUCTOR\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/drag-icon.dd0d8b18.svg\";","import React, {FC, useRef} from 'react';\r\nimport styles from \"./constructor-ingredient.module.css\";\r\nimport icon from \"../../images/drag-icon.svg\";\r\nimport {ConstructorElement} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {TClientRect, TIngredient} from \"../../utils/constants\";\r\n\r\ninterface IConstructorIngredientProps {\r\n    item: TIngredient,\r\n    handleDeleteElement: (item: TIngredient) => void,\r\n    index: number,\r\n    moveIngredient: (dragIndex: number, hoverIndex: number) => void\r\n}\r\n\r\nconst ConstructorIngredient: FC<IConstructorIngredientProps> = ({item, handleDeleteElement, index, moveIngredient}) => {\r\n\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const [, drop] = useDrop({\r\n        accept: 'constructorIngredient',\r\n        hover: function (item: any, monitor: any) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex: number = item.index;\r\n            const hoverIndex: number = index;\r\n            // Don't replace items with themselves\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n\r\n            const hoverBoundingRect: TClientRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY: number = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset : {x: number, y:number} = monitor.getClientOffset();\r\n            const hoverClientY: number = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            moveIngredient(dragIndex, hoverIndex);\r\n            item.index = hoverIndex;\r\n        },\r\n    });\r\n\r\n    const [, drag] = useDrag({\r\n        type: 'constructorIngredient',\r\n        item: () => {\r\n            return {...item, index}\r\n        },\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div className={`${styles.innerBurgerElement} pr-2`} ref={ref}>\r\n            <img src={icon} alt=\"Иконка перетаскиваемого элемента\" className={styles.dragIcon}/>\r\n            <ConstructorElement\r\n                text={item[\"name\"]}\r\n                price={item[\"price\"]}\r\n                thumbnail={item[\"image\"]}\r\n                handleClose={() => handleDeleteElement(item)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConstructorIngredient;","import {store} from \"../index\";\r\nimport {TAppActions, TAppThunk} from \"./hooks\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nexport const ROOT_URL = 'https://norma.nomoreparties.space/api';\r\nexport type TIngredient = {\r\n    _id: string,\r\n    key?: number,\r\n    name: string,\r\n    type: string,\r\n    proteins: number,\r\n    fat: number,\r\n    carbohydrates: number,\r\n    calories: number,\r\n    price: number,\r\n    image: string,\r\n    image_mobile: string,\r\n    image_large: string,\r\n    __v: number,\r\n}\r\n\r\nexport type TClientRect = {\r\n    top: number,\r\n    left: number,\r\n    bottom: number,\r\n    right: number,\r\n    width: number,\r\n    height: number\r\n}\r\n\r\nexport type TUser = {\r\n    name: string,\r\n    email: string,\r\n}\r\n\r\nexport type TOrder = {\r\n    name: string,\r\n    order: {\r\n        number: number\r\n    },\r\n    success: boolean\r\n}\r\n\r\nexport type TFeed = {\r\n    ingredients: string[],\r\n    \"_id\": string,\r\n    status: string,\r\n    name: string,\r\n    number: number,\r\n    createdAt: string,\r\n    updatedAt: string\r\n}\r\n\r\nexport type TRootState = ReturnType<typeof store.getState>\r\n\r\nexport type TAppDispatch = ThunkDispatch<TRootState , unknown, TAppActions>\r\n","import {ROOT_URL} from \"./constants\";\r\n\r\nexport function setCookie(name:string, value:any, props?:any) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name:string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport const checkResponse = (res: Response) => {\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nexport const refreshToken = () => {\r\n    return fetch(`${ROOT_URL}/auth/token`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem(\"refreshToken\"),\r\n        }),\r\n    }).then(checkResponse);\r\n};\r\n\r\nexport const retriableFetch = async <ReturnType>(url:string, options: RequestInit | undefined = {}): Promise<ReturnType> => {\r\n    try {\r\n        const res = await fetch(url, options);\r\n        const result = await checkResponse(res) as ReturnType;\r\n        return result;\r\n    } catch (err) {\r\n        if(err instanceof Error){\r\n            if (err.message === \"jwt malformed\") {\r\n                const refreshData = await refreshToken(); // обновляем токен; пытаемся 1 раз, если не сложилось -- падаем с ошибкой\r\n                localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\r\n                const authToken =   refreshData.accessToken.split('Bearer ')[1];\r\n\r\n                setCookie(\"accessToken\", authToken); // тут для примера accessToken храним в куке\r\n\r\n                if (!options.headers) {\r\n                    options.headers = {};\r\n                }\r\n\r\n                (options.headers as Record<string, string>).authorization = getCookie('refreshToken') || '';\r\n                const res = await fetch(url, options); // повторяем оригинальный запрос с оригинальными options (+ дополнительным хедером)\r\n                return await checkResponse(res); // если все равно проваливаемся -- значит не судьба :/\r\n            }\r\n        }\r\n        throw err\r\n    }\r\n};\r\n\r\n\r\nexport const sendResetEmail = (form:{email: string}) => {\r\n    return fetch(`${ROOT_URL}/password-reset`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse);\r\n};\r\n\r\nexport const sendResetPasword = (form:{password: string, token: string}) => {\r\n    return fetch(`${ROOT_URL}/password-reset/reset`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(form)\r\n    }).then(checkResponse);\r\n};","import {ROOT_URL, TAppDispatch, TOrder} from \"../../utils/constants\";\r\nimport {CLEAR_CONSTRUCTOR} from \"./constructor-ingredients\";\r\nimport {TAppThunk} from \"../../utils/hooks\";\r\nimport {checkResponse, getCookie} from \"../../utils/utils\";\r\n\r\nexport const TAKE_ORDER = 'TAKE_ORDER'\r\nexport const ORDER_FAILED = 'ORDER_FAILED'\r\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS'\r\n\r\nexport interface ITAKE_ORDER {\r\n    readonly type: typeof TAKE_ORDER\r\n}\r\nexport interface IORDER_FAILED {\r\n    readonly type: typeof ORDER_FAILED\r\n}\r\nexport interface IORDER_SUCCESS {\r\n    readonly type: typeof ORDER_SUCCESS\r\n    payload: TOrder\r\n}\r\n\r\nexport type TOrderActions = ITAKE_ORDER | IORDER_FAILED | IORDER_SUCCESS\r\n\r\nexport function takeOrder(burgerOrder: {ingredients: string[]}, toggleModal:() => void){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: TAKE_ORDER})\r\n\r\n        fetch(`${ROOT_URL}/orders`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(burgerOrder),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': 'Bearer ' + getCookie('accessToken')\r\n            },\r\n        })\r\n            .then(checkResponse)\r\n            .then(res => {\r\n                if(res && res.success){\r\n                    dispatch({\r\n                        type: ORDER_SUCCESS,\r\n                        payload: res\r\n                    })\r\n                    dispatch({type: CLEAR_CONSTRUCTOR})\r\n                    toggleModal()\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: ORDER_FAILED\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: ORDER_FAILED\r\n                })\r\n            })\r\n    }\r\n}","import React, {useCallback, useMemo, useState} from 'react';\r\nimport styles from './burger-constructor.module.css'\r\nimport {Button, ConstructorElement, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {\r\n    ADD_CONSTRUCTOR_BUN,\r\n    ADD_CONSTRUCTOR_INGREDIENT, CHANGE_CONSTRUCTOR_INGREDIENT_POSITION,\r\n    REMOVE_CONSTRUCTOR_INGREDIENT, REPLACE_CONSTRUCTOR_BUN\r\n} from \"../../services/actions/constructor-ingredients\";\r\nimport ConstructorIngredient from \"../constructor-ingredient/constructor-ingredient\";\r\nimport {takeOrder} from \"../../services/actions/order-details\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\nfunction BurgerConstructor() {\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n\r\n    const isAuth: boolean = useSelector((store) => store.auth.isAuth)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const burgerConstructorState = useSelector((state) => state.constructorIngredients)\r\n\r\n    const totalPrice = useMemo<number>(() => {\r\n        return burgerConstructorState.ingredients.reduce((acc:number, item:TIngredient) => acc+=item.price, 0) + ((burgerConstructorState?.bun?.price || 0) * 2)\r\n    }, [burgerConstructorState.bun, burgerConstructorState.ingredients])\r\n\r\n    const [{isHover},dropRef] = useDrop({\r\n        accept: 'ingredient',\r\n        drop(item:TIngredient){\r\n            if(item.type !== 'bun'){\r\n                dispatch({type: ADD_CONSTRUCTOR_INGREDIENT, payload:item})\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: (burgerConstructorState.bun ? REPLACE_CONSTRUCTOR_BUN : ADD_CONSTRUCTOR_BUN),\r\n                    payload: item\r\n                })\r\n            }\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver()\r\n        })\r\n    }, [burgerConstructorState.ingredients])\r\n\r\n    const moveIngredient = useCallback((dragIndex, hoverIndex) => {\r\n        dispatch({type: CHANGE_CONSTRUCTOR_INGREDIENT_POSITION, payload:{dragIndex, hoverIndex}})\r\n    }, [dispatch]);\r\n\r\n    function orderClickHandler(): void{\r\n        if(!burgerConstructorState.bun){\r\n            return\r\n        }\r\n        if(isAuth){\r\n            const burgerOrder: string[] = burgerConstructorState.ingredients.reduce((acc: string[], item:TIngredient) => {\r\n                return [...acc, item['_id']]\r\n            }, [])\r\n            dispatch(takeOrder({ingredients: burgerOrder}, toggleOrderModal))\r\n        }\r\n        else{\r\n            navigate('/login')\r\n        }\r\n    }\r\n\r\n    function toggleOrderModal(): void{\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    function handleDeleteElement(item:TIngredient): void{\r\n        dispatch({type:REMOVE_CONSTRUCTOR_INGREDIENT, payload: item['key'] ?? 0})\r\n    }\r\n    function renderIngredients(item:TIngredient, index:number){\r\n        return (\r\n            <ConstructorIngredient key={item.key} item={item} index={index} moveIngredient={moveIngredient} handleDeleteElement={handleDeleteElement} />\r\n        )\r\n    }\r\n\r\n    const border = isHover ? '2px solid #4c4cff' : ''\r\n\r\n    return (\r\n        <div style={{border}} className={`${styles.burgerConstructor} burger-constructor-container pl-4`} ref={dropRef}>\r\n            <div className={`${styles.burger} mb-10`}>\r\n                {burgerConstructorState.bun && (\r\n                    <div className=\"pr-4 mb-4\">\r\n                        <ConstructorElement\r\n                            type=\"top\"\r\n                            isLocked={true}\r\n                            text={burgerConstructorState.bun['name'] + \" (верх)\"}\r\n                            price={burgerConstructorState.bun['price']}\r\n                            thumbnail={burgerConstructorState.bun[\"image\"]}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <div className={styles.innerBurgerContainer}>\r\n                    {burgerConstructorState.ingredients.map((item:TIngredient, index:number) => (\r\n                        renderIngredients(item, index)\r\n                    ))}\r\n                </div>\r\n                {burgerConstructorState.bun && (\r\n                    <div className=\"pr-4 mt-4\">\r\n                        <ConstructorElement\r\n                            type=\"bottom\"\r\n                            isLocked={true}\r\n                            text={burgerConstructorState.bun['name'] + \" (низ)\"}\r\n                            price={burgerConstructorState.bun['price']}\r\n                            thumbnail={burgerConstructorState.bun[\"image\"]}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {Boolean(burgerConstructorState.bun || burgerConstructorState.ingredients.length) && (\r\n                <div className={`${styles.offer} offer-block pr-4`}>\r\n                    <span className={`text text_type_digits-medium mr-10 ${styles.offerPrice}`}>\r\n                        {totalPrice}\r\n                        <CurrencyIcon type=\"primary\"/>\r\n                    </span>\r\n                    <Button onClick={orderClickHandler} type=\"primary\" size=\"large\">\r\n                        Оформить заказ\r\n                    </Button>\r\n                </div>\r\n            )}\r\n            <Modal isOpen={showModal} toggleModal={toggleOrderModal}>\r\n                <OrderDetails/>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BurgerConstructor;","import React from 'react';\r\n\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport styles from './home.module.css'\r\n\r\nfunction Home() {\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <section>\r\n                    <h1 className=\"text text_type_main-large mb-5 pt-10\">Соберите бургер</h1>\r\n                    <div className={styles.burgerSectionContainer}>\r\n                        <DndProvider backend={HTML5Backend}>\r\n                            <BurgerIngredients />\r\n                            <BurgerConstructor />\r\n                        </DndProvider>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Home;","import {ROOT_URL, TAppDispatch, TUser} from \"../../utils/constants\";\r\nimport {checkResponse} from \"../../utils/utils\";\r\n\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST'\r\nexport const REGISTER_REQUEST_SUCCESS = 'REGISTER_REQUEST_SUCCESS'\r\nexport const REGISTER_REQUEST_FAILED = 'REGISTER_REQUEST_FAILED'\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS'\r\nexport const LOGIN_REQUEST_FAILED = 'LOGIN_REQUEST_FAILED'\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST'\r\nexport const LOGOUT_REQUEST_SUCCESS = 'LOGOUT_REQUEST_SUCCESS'\r\nexport const LOGOUT_REQUEST_FAILED = 'LOGOUT_REQUEST_FAILED'\r\n\r\nexport interface IREGISTER_REQUEST {\r\n    readonly type: typeof REGISTER_REQUEST;\r\n}\r\nexport interface IREGISTER_REQUEST_SUCCESS {\r\n    readonly type: typeof REGISTER_REQUEST_SUCCESS;\r\n    payload: {\r\n        accessToken: string,\r\n        refreshToken: string,\r\n        user: TUser\r\n    }\r\n}\r\nexport interface IREGISTER_REQUEST_FAILED {\r\n    readonly type: typeof REGISTER_REQUEST_FAILED;\r\n}\r\nexport interface ILOGIN_REQUEST {\r\n    readonly type: typeof LOGIN_REQUEST;\r\n}\r\nexport interface ILOGIN_REQUEST_SUCCESS {\r\n    readonly type: typeof LOGIN_REQUEST_SUCCESS;\r\n    payload: {\r\n        accessToken: string,\r\n        refreshToken: string,\r\n        user: TUser\r\n    }\r\n}\r\nexport interface ILOGIN_REQUEST_FAILED {\r\n    readonly type: typeof LOGIN_REQUEST_FAILED;\r\n}\r\nexport interface ILOGOUT_REQUEST {\r\n    readonly type: typeof LOGOUT_REQUEST;\r\n}\r\nexport interface ILOGOUT_REQUEST_SUCCESS {\r\n    readonly type: typeof LOGOUT_REQUEST_SUCCESS;\r\n}\r\nexport interface ILOGOUT_REQUEST_FAILED {\r\n    readonly type: typeof LOGOUT_REQUEST_FAILED;\r\n}\r\n\r\nexport type TAuthActions =\r\n    ILOGIN_REQUEST |\r\n    ILOGIN_REQUEST_FAILED |\r\n    ILOGIN_REQUEST_SUCCESS |\r\n    ILOGOUT_REQUEST |\r\n    ILOGOUT_REQUEST_FAILED |\r\n    ILOGOUT_REQUEST_SUCCESS |\r\n    IREGISTER_REQUEST |\r\n    IREGISTER_REQUEST_FAILED |\r\n    IREGISTER_REQUEST_SUCCESS\r\n\r\n\r\nexport function logout(form:{token: string}){\r\n    return function(dispatch: TAppDispatch){\r\n        dispatch({type: LOGOUT_REQUEST})\r\n        fetch(`${ROOT_URL}/auth/logout`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(form),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(checkResponse)\r\n            .then((res) => {\r\n                if(res || res.success){\r\n                    dispatch({\r\n                        type: LOGOUT_REQUEST_SUCCESS,\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: LOGOUT_REQUEST_FAILED\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: LOGOUT_REQUEST_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function login(form:{email: string, password: string}){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: LOGIN_REQUEST})\r\n\r\n        fetch(`${ROOT_URL}/auth/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(form),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(checkResponse)\r\n            .then(res => {\r\n                if(res || res.success){\r\n                    dispatch({\r\n                        type: LOGIN_REQUEST_SUCCESS,\r\n                        payload: res\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: LOGIN_REQUEST_FAILED\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: LOGIN_REQUEST_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\nexport function register(form:{email: string, name: string, password: string}){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: REGISTER_REQUEST})\r\n\r\n        fetch(`${ROOT_URL}/auth/register`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(form),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(checkResponse)\r\n            .then(res => {\r\n                if(res || res.success){\r\n                    dispatch({\r\n                        type: REGISTER_REQUEST_SUCCESS,\r\n                        payload: res\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: REGISTER_REQUEST_FAILED\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: REGISTER_REQUEST_FAILED\r\n                })\r\n            })\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './login.module.css'\r\nimport {Link, Navigate, useLocation} from \"react-router-dom\";\r\nimport {login} from \"../../services/actions/auth\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\n\r\n\r\nfunction Login() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth: boolean = useSelector((store) => store.auth.isAuth)\r\n\r\n    const state = useLocation().state;\r\n\r\n    const [form, setForm] = useState<{email: string, password: string}>({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n\r\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n        setForm({...form,[e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e:React.FormEvent): void => {\r\n        e.preventDefault()\r\n        dispatch(login(form))\r\n    }\r\n\r\n    if(isAuth) return  <Navigate to={ state?.from || '/' }/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className={`${styles.form} main-form`} onSubmit={onSubmit}>\r\n                <h3 className={`text text_type_main-medium mb-6 ${styles.formMainText}`}>Вход</h3>\r\n                <div className='mb-6'>\r\n                    <Input onChange={onChange} type={\"email\"} placeholder={\"Email\"} value={form['email']} name={'email'} />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput onChange={onChange} value={form['password']} name={'password'} />\r\n                </div>\r\n                <div className={`${styles.buttonContainer} mb-20`}>\r\n                    <Button type=\"primary\" size=\"large\">\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.bottomText}>\r\n                    <span className=\"text text_type_main-default mb-4\">\r\n                        Вы — новый пользователь?\r\n                        <Link className={styles.formLink} to=\"/register\"> Зарегистрироваться</Link>\r\n                    </span>\r\n                    <span className=\"text text_type_main-default\">\r\n                        Забыли пароль?\r\n                        <Link className={styles.formLink} to=\"/forgot-password\"> Восстановить пароль</Link>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './register.module.css'\r\nimport {Link, Navigate, useLocation} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\n\r\nimport {register} from \"../../services/actions/auth\";\r\n\r\n\r\nfunction Register() {\r\n    const dispatch = useDispatch()\r\n\r\n    const isAuth: boolean = useSelector((store) => store.auth.isAuth)\r\n\r\n    const state = useLocation().state;\r\n\r\n    const [form, setForm] = useState<{name: string, email:string, password: string}>({\r\n        email: '',\r\n        password: '',\r\n        name: ''\r\n    })\r\n\r\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e:React.FormEvent): void => {\r\n        e.preventDefault()\r\n        dispatch(register(form))\r\n    }\r\n\r\n\r\n\r\n    if(isAuth) return  <Navigate to={ state?.from || '/' }/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className={`${styles.form} main-form`} onSubmit={onSubmit}>\r\n                <h3 className={`text text_type_main-medium mb-6 ${styles.formMainText}`}>Регистрация</h3>\r\n                <div className='mb-6'>\r\n                    <Input onChange={onChange} type={\"text\"} placeholder={\"Имя\"} value={form['name']} name={'name'} />\r\n                </div>\r\n                <div className='mb-6'>\r\n                    <Input onChange={onChange} type={\"email\"} placeholder={\"email\"} value={form['email']} name={'email'} />\r\n                </div>\r\n                <div className=\"mb-6\">\r\n                    <PasswordInput onChange={onChange} value={form['password']} name={'password'} />\r\n                </div>\r\n                <div className={`${styles.buttonContainer} mb-20`}>\r\n                    <Button type=\"primary\" size=\"large\">\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.bottomText}>\r\n                    <span className=\"text text_type_main-default\">\r\n                        Уже зарегистрированы?\r\n                        <Link className={styles.formLink} to=\"/login\"> Войти</Link>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, {useState} from 'react';\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './forgot-password.module.css'\r\nimport {Link, Navigate, useNavigate} from \"react-router-dom\";\r\nimport {sendResetEmail} from \"../../utils/utils\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\n\r\n\r\nfunction ForgotPassword() {\r\n    const [form, setForm] = useState<{email: string}>({\r\n        email: '',\r\n    })\r\n\r\n    const isAuth: boolean = useSelector((state) => state.auth.isAuth)\r\n\r\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const onSubmit = async (e:React.FormEvent) => {\r\n        e.preventDefault()\r\n        sendResetEmail(form)\r\n            .then(res => {\r\n                if(res.success){\r\n                    navigate('/reset-password', {state: {fromForgotPassword: true}})\r\n                }\r\n            })\r\n            .catch(e => console.log(e.message))\r\n\r\n    }\r\n\r\n    if(isAuth) return <Navigate to={\"/\"}/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className={`${styles.form} main-form`} onSubmit={onSubmit}>\r\n                <h3 className={`text text_type_main-medium mb-6 ${styles.formMainText}`}>Регистрация</h3>\r\n                <div className='mb-6'>\r\n                    <Input onChange={onChange} type={\"email\"} placeholder={\"email\"} value={form['email']} name={'email'} />\r\n                </div>\r\n                <div className={`${styles.buttonContainer} mb-20`}>\r\n                    <Button type=\"primary\" size=\"large\">\r\n                        Восстановить\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.bottomText}>\r\n                    <span className=\"text text_type_main-default\">\r\n                        Вспомнили пароль?\r\n                        <Link className={styles.formLink} to=\"/login\"> Войти</Link>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React, {useState} from 'react';\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport styles from './reset-password.module.css'\r\nimport {Link, Navigate, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {sendResetPasword} from \"../../utils/utils\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\n\r\n\r\nfunction ResetPassword() {\r\n    const [form, setForm] = useState<{password: string, token: string}>({\r\n        password: '',\r\n        token: '',\r\n    })\r\n\r\n    const isAuth: boolean = useSelector((state) => state.auth.isAuth)\r\n\r\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n        setForm({...form, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const location = useLocation()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const onSubmit = async (e:React.FormEvent) => {\r\n        e.preventDefault()\r\n        sendResetPasword(form)\r\n            .then(res => {\r\n                if(res.success){\r\n                    navigate('/')\r\n                }\r\n            })\r\n            .catch(e => console.log(e.message))\r\n\r\n    }\r\n    if(isAuth || !location.state?.fromForgotPassword) return <Navigate to={\"/\"}/>\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form className={`${styles.form} main-form`} onSubmit={onSubmit}>\r\n                <h3 className={`text text_type_main-medium mb-6 ${styles.formMainText}`}>Регистрация</h3>\r\n                <div className='mb-6'>\r\n                    <PasswordInput onChange={onChange} value={form['password']} name={'password'} />\r\n                </div>\r\n                <div className='mb-6'>\r\n                    <Input type={\"text\"} onChange={onChange} placeholder={\"Введите код из письма\"} value={form['token']} name={'token'} />\r\n                </div>\r\n                <div className={`${styles.buttonContainer} mb-20`}>\r\n                    <Button type=\"primary\" size=\"large\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n                <div className={styles.bottomText}>\r\n                    <span className=\"text text_type_main-default\">\r\n                        Вспомнили пароль?\r\n                        <Link className={styles.formLink} to=\"/login\"> Войти</Link>\r\n                    </span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPassword ;","import {getCookie,retriableFetch} from \"../../utils/utils\";\r\nimport {ROOT_URL, TAppDispatch, TUser} from \"../../utils/constants\";\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_OPTIONS_REQUEST'\r\nexport const UPDATE_PROFILE_REQUEST_SUCCESS = 'UPDATE_PROFILE_OPTIONS_REQUEST_SUCCESS'\r\nexport const UPDATE_PROFILE_REQUEST_FAILED = 'UPDATE_PROFILE_OPTIONS_REQUEST_FAILED'\r\n\r\nexport const GET_PROFILE_REQUEST = 'GET_PROFILE_OPTIONS_REQUEST'\r\nexport const GET_PROFILE_REQUEST_SUCCESS = 'GET_PROFILE_OPTIONS_REQUEST_SUCCESS'\r\nexport const GET_PROFILE_REQUEST_FAILED = 'GET_PROFILE_OPTIONS_REQUEST_FAILED'\r\n\r\nexport interface IUPDATE_PROFILE_REQUEST {\r\n    readonly type: typeof UPDATE_PROFILE_REQUEST\r\n}\r\nexport interface IUPDATE_PROFILE_REQUEST_SUCCESS {\r\n    readonly type: typeof UPDATE_PROFILE_REQUEST_SUCCESS\r\n    payload: TUser\r\n}\r\nexport interface IUPDATE_PROFILE_REQUEST_FAILED {\r\n    readonly type: typeof UPDATE_PROFILE_REQUEST_FAILED\r\n}\r\nexport interface IGET_PROFILE_REQUEST {\r\n    readonly type: typeof GET_PROFILE_REQUEST\r\n}\r\nexport interface IGET_PROFILE_REQUEST_SUCCESS {\r\n    readonly type: typeof GET_PROFILE_REQUEST_SUCCESS\r\n    payload: TUser\r\n}\r\nexport interface IGET_PROFILE_REQUEST_FAILED {\r\n    readonly type: typeof GET_PROFILE_REQUEST_FAILED\r\n}\r\n\r\nexport type TProfileActions =\r\n    IUPDATE_PROFILE_REQUEST |\r\n    IUPDATE_PROFILE_REQUEST_FAILED |\r\n    IUPDATE_PROFILE_REQUEST_SUCCESS |\r\n    IGET_PROFILE_REQUEST |\r\n    IGET_PROFILE_REQUEST_FAILED |\r\n    IGET_PROFILE_REQUEST_SUCCESS\r\n\r\n\r\nexport function getProfile(){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: GET_PROFILE_REQUEST})\r\n\r\n        retriableFetch(`${ROOT_URL}/auth/user`, {\r\n            headers: {\r\n                authorization: `Bearer ${getCookie('accessToken')}`\r\n            }\r\n        })\r\n        .then((res: any) => {\r\n            if(res && res.success){\r\n                dispatch({\r\n                    type: GET_PROFILE_REQUEST_SUCCESS,\r\n                    payload: res.user\r\n                })\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: GET_PROFILE_REQUEST_FAILED\r\n                })\r\n            }\r\n        })\r\n        .catch(e => {\r\n            dispatch({\r\n                type: GET_PROFILE_REQUEST_FAILED\r\n            })\r\n        })\r\n    }\r\n}\r\nexport function updateProfile(form: {name: string, email: string, password: string }){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: UPDATE_PROFILE_REQUEST})\r\n        retriableFetch(`${ROOT_URL}/auth/user`, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(form),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                authorization: `Bearer ${getCookie('accessToken')}`\r\n            }\r\n        })\r\n        .then((res: any) => {\r\n            if(res && res.success){\r\n                dispatch({\r\n                    type: UPDATE_PROFILE_REQUEST_SUCCESS,\r\n                    payload: res.user\r\n                })\r\n            }\r\n            else{\r\n                dispatch({\r\n                    type: UPDATE_PROFILE_REQUEST_FAILED\r\n                })\r\n            }\r\n        })\r\n        .catch(e => {\r\n            dispatch({\r\n                type: UPDATE_PROFILE_REQUEST_FAILED\r\n            })\r\n        })\r\n    }\r\n}","import React, {useEffect, useMemo, useState} from 'react';\r\nimport styles from './profile.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {getProfile, updateProfile} from \"../../services/actions/profile\";\r\nimport {logout} from \"../../services/actions/auth\";\r\n\r\nconst Profile = () => {\r\n    const profile = useSelector((state) => state.profile)\r\n\r\n    const [form, setForm] = useState<{name: string, email:string, password: string}>({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onChange = (e:React.ChangeEvent<HTMLInputElement>): void => {\r\n        setForm({...form,[e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onSubmit = (e:React.FormEvent): void => {\r\n        e.preventDefault()\r\n        dispatch(updateProfile(form))\r\n    }\r\n\r\n    const logOutHandler = (e:React.MouseEvent): void => {\r\n        e.preventDefault()\r\n        dispatch(logout({token: localStorage.getItem('refreshToken') ?? ''}))\r\n    }\r\n\r\n    const onCancelClick = () : void => {\r\n        setForm({\r\n            name: profile.profile.name ?? '',\r\n            email: profile.profile.email ?? '',\r\n            password: ''\r\n        })\r\n    }\r\n\r\n    useMemo(() => {\r\n        if(!profile.profileRequest && profile.profile){\r\n            setForm({\r\n                ...form,\r\n                name: profile.profile.name ?? '',\r\n                email: profile.profile.email ?? '',\r\n            })\r\n        }\r\n    }, [profile])\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile())\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <div className={\"container pt-30\"}>\r\n            <div className={styles.profileContent}>\r\n                <div className={`${styles.aside} mr-15`}>\r\n                    <div className={`${styles.asideMenus} mb-20`}>\r\n                        <NavLink className={`${styles.asideLink} text text_type_main-medium`} to={\"/profile\"}>Профиль</NavLink>\r\n                        <NavLink className={`${styles.asideLink} text text_type_main-medium`} to={\"/profile/orders\"}>История заказов</NavLink>\r\n                        <a href=\"/\" onClick={logOutHandler} className={`${styles.asideLink} text text_type_main-medium`}>Выход</a>\r\n                    </div>\r\n                    <span className={\"d-block text text_type_main-default text_color_inactive\"}>\r\n                В этом разделе вы можете\r\n                    изменить свои персональные данные\r\n                </span>\r\n                </div>\r\n                <form onSubmit={onSubmit} className={`${styles.profileOptions} main-form `}>\r\n                    <div className=\"mb-6\">\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Имя'}\r\n                            onChange={onChange}\r\n                            icon={'EditIcon'}\r\n                            value={form['name']}\r\n                            name={'name'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Логин'}\r\n                            onChange={onChange}\r\n                            icon={'EditIcon'}\r\n                            value={form['email']}\r\n                            name={'email'}\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <PasswordInput\r\n                            onChange={onChange}\r\n                            value={form['password']}\r\n                            name={'password'}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.buttons}>\r\n                        <button onClick={onCancelClick} type=\"button\" className={`mr-5 pl-2 pt-4 pr-2 pb-4 text text_type_main-default ${styles.cancelButton}`}>\r\n                            Отмена\r\n                        </button>\r\n                        <Button type=\"primary\" size=\"large\">\r\n                            Сохранить\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {FC} from 'react';\r\nimport styles from \"./ingredient-details.module.css\"\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\ninterface IIngredientDetails {\r\n    ingredient: TIngredient\r\n}\r\n\r\nconst IngredientDetails: FC<IIngredientDetails> = ({ingredient}) => {\r\n    return (\r\n        <div className={`${styles.ingredientsModalBody} ingredient-details`}>\r\n             <div className=\"mb-4\">\r\n                 <img src={ingredient.image_large} alt=\"\"/>\r\n             </div>\r\n            <h4 className=\"mb-8 text text_type_main-medium\">{ingredient.name}</h4>\r\n            <div className={`${styles.composition} mb-15`}>\r\n                <div className={styles.compositionItem}>\r\n                    <span className=\" mb-2 text text_type_main-default text_color_inactive\">Калории,ккал</span>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">{ingredient.calories}</span>\r\n                </div>\r\n                <div className={styles.compositionItem}>\r\n                    <span className=\" mb-2 text text_type_main-default text_color_inactive\">Белки, г</span>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">{ingredient.proteins}</span>\r\n                </div>\r\n                <div className={styles.compositionItem}>\r\n                    <span className=\" mb-2 text text_type_main-default text_color_inactive\">Жиры, г</span>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">{ingredient.fat}</span>\r\n                </div>\r\n                <div className={styles.compositionItem}>\r\n                    <span className=\" mb-2 text text_type_main-default text_color_inactive\">Углеводы, г</span>\r\n                    <span className=\"text text_type_digits-default text_color_inactive\">{ingredient.carbohydrates}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientDetails;","import React from 'react';\r\nimport IngredientDetails from \"../../components/ingredient-details/ingredient-details\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\nimport styles from './ingredient.module.css'\r\nfunction Ingredient() {\r\n\r\n    const {id} = useParams()\r\n\r\n    const ingredients: TIngredient[] = useSelector((state) => state.ingredients.ingredients)\r\n    const ingredient: TIngredient | undefined = ingredients.find((item:TIngredient) => item._id === id)\r\n\r\n    if(!ingredient) return null\r\n\r\n    return (\r\n        <div className={\"pt-30\"}>\r\n            <h1 className={`${styles.headText} text text_type_main-large`}>Детали ингредиента</h1>\r\n            <IngredientDetails ingredient={ingredient}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ingredient;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div>\r\n            <h1>Page not found</h1>\r\n            <h3>U can go on the <Link to=\"/\">main page</Link></h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import {Navigate, useLocation, Outlet } from 'react-router-dom';\r\nimport {useSelector} from \"../../utils/hooks\";\r\n\r\nexport function ProtectedRoute() {\r\n\r\n    const isAuth: boolean = useSelector((state) => state.auth.isAuth)\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        isAuth ? <Outlet /> : <Navigate to={'/login'} state={{from: location}} />\r\n    );\r\n}","import React, {FC, useMemo} from 'react';\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\ninterface IModalIngredientProps{\r\n    isOpen: boolean\r\n}\r\n\r\nconst ModalIngredient: FC<IModalIngredientProps> = ({isOpen}) => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const ingredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const activeIngredient = useMemo<TIngredient | undefined>(() => {\r\n        return ingredients.find((item:TIngredient) => item._id === id)\r\n    }, [id,ingredients])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    function toggleIngredientModal(): void{\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} headerText=\"Детали ингредиента\" toggleModal={toggleIngredientModal}>\r\n            {activeIngredient && <IngredientDetails ingredient={activeIngredient}/>}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalIngredient;","import {ROOT_URL, TAppDispatch, TIngredient} from \"../../utils/constants\";\r\nimport {TAppThunk} from \"../../utils/hooks\";\r\nimport {checkResponse} from \"../../utils/utils\";\r\n\r\nexport const GET_INGREDIENTS = 'GET_INGREDIENTS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_INGREDIENTS_FAILED';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_INGREDIENTS_SUCCESS';\r\n\r\nexport interface IGET_INGREDIENTS {\r\n    readonly type: typeof GET_INGREDIENTS\r\n}\r\nexport interface IGET_INGREDIENTS_FAILED {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED\r\n}\r\nexport interface IGET_INGREDIENTS_SUCCESS {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS\r\n    payload: TIngredient[]\r\n}\r\n\r\nexport type TIngredientActions = IGET_INGREDIENTS | IGET_INGREDIENTS_SUCCESS | IGET_INGREDIENTS_FAILED\r\n\r\n\r\nexport function getIngredients(){\r\n    return function(dispatch:TAppDispatch){\r\n        dispatch({type: GET_INGREDIENTS})\r\n\r\n        fetch(`${ROOT_URL}/ingredients`)\r\n            .then(checkResponse)\r\n            .then(res => {\r\n                if(res && res.success){\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_SUCCESS,\r\n                        payload: res.data\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_FAILED\r\n                    })\r\n                }\r\n            })\r\n            .catch(e => {\r\n                dispatch({\r\n                    type: GET_INGREDIENTS_FAILED\r\n                })\r\n            })\r\n    }\r\n}","import React, {FC, useMemo} from 'react';\r\nimport styles from './feed-item.module.css'\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {TFeed, TIngredient} from \"../../utils/constants\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\nconst FeedItem: FC<TFeed & { isShowStatus: boolean, onClick: (...args: any[]) => void }> = (\r\n        {onClick, isShowStatus, _id, number, name, createdAt, status, ingredients}\r\n    ) => {\r\n\r\n    const allIngredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const feedIngredients: TIngredient[] = useMemo(() => {\r\n        return allIngredients.filter((ingredient: TIngredient) => ingredients.find(orderIngredient => ingredient._id === orderIngredient))\r\n    }, [allIngredients, ingredients])\r\n\r\n    const renderIngredients = () => {\r\n        if(feedIngredients.length > 5){\r\n            return  feedIngredients.slice(0, 6).map((item, index: number) => {\r\n                if(index === 5){\r\n                    return (\r\n                        <div key={item._id + Math.random() * 1000} className={styles.feedMoreContainer}>\r\n                            <div className={styles.feedImageContainer}>\r\n                                <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                            </div>\r\n                            <span className={`${styles.count} text text_type_main-default`}>+{feedIngredients.length - 5}</span>\r\n                        </div>\r\n                    )\r\n                }\r\n                return (\r\n                    <div key={item._id + Math.random() * 1000} className={styles.feedImageContainer}>\r\n                        <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        return  feedIngredients.map(item => (\r\n            <div key={item._id + Math.random() * 1000} className={styles.feedImageContainer}>\r\n                <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n            </div>\r\n        ))\r\n\r\n    }\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return feedIngredients.reduce((acc, item) => acc += item.price, 0)\r\n    }, [feedIngredients])\r\n\r\n    return (\r\n        <div className={styles.feedItem} onClick={() => onClick(_id)}>\r\n            <div className={styles.header}>\r\n                <span className=\"text text_type_main-default\">#{number}</span>\r\n                <span className=\"text text_type_main-default text_color_inactive\">{new Date(createdAt).toLocaleDateString()}</span>\r\n            </div>\r\n            <div className={styles.main}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">{name}</h3>\r\n                {isShowStatus && (\r\n                    <h5 className=\"text text_type_main-small mb-6\">\r\n                        {\r\n                            status === 'created' ? 'Создан' :\r\n                                status === 'done' ? 'Выполнен' :\r\n                                    'Готовится'\r\n                        }\r\n                    </h5>\r\n                )}\r\n            </div>\r\n            <div className={styles.bottom}>\r\n                <div className={styles.ingredients}>\r\n                    {renderIngredients()}\r\n                </div>\r\n                <div className={`${styles.price} mb-1`}>\r\n                    <span className={`mr-2 text text_type_digits-default`}>{orderPrice}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FeedItem;","\r\nexport const  WS_ORDERS_CONNECTION_CLOSED = 'WS_ORDERS_CONNECTION_CLOSED'\r\nexport const WS_ORDERS_CONNECTION_ERROR = 'WS_ORDERS_CONNECTION_ERROR'\r\nexport const  WS_ORDERS_CONNECTION_START = 'WS_ORDERS_CONNECTION_START'\r\nexport const   WS_ORDERS_CONNECTION_SUCCESS = 'WS_ORDERS_CONNECTION_SUCCESS'\r\nexport const WS_ORDERS_GET_MESSAGE = 'WS_ORDERS_GET_MESSAGE'\r\nexport const  WS_ORDERS_SEND_MESSAGE = 'WS_ORDERS_SEND_MESSAGE'\r\n\r\ninterface IWS_ORDERS_CONNECTION_CLOSED {\r\n    readonly type: typeof WS_ORDERS_CONNECTION_CLOSED,\r\n    payload?: any\r\n}\r\ninterface IWS_ORDERS_CONNECTION_ERROR {\r\n    readonly type: typeof WS_ORDERS_CONNECTION_ERROR,\r\n    payload: any\r\n}\r\ninterface IWS_ORDERS_CONNECTION_START {\r\n    readonly type: typeof WS_ORDERS_CONNECTION_START,\r\n}\r\ninterface IWS_ORDERS_CONNECTION_SUCCESS {\r\n    readonly type: typeof WS_ORDERS_CONNECTION_SUCCESS,\r\n    payload: any\r\n}\r\ninterface IWS_ORDERS_GET_MESSAGE {\r\n    readonly type: typeof WS_ORDERS_GET_MESSAGE,\r\n    payload: any\r\n}\r\ninterface IWS_ORDERS_SEND_MESSAGE {\r\n    readonly type: typeof WS_ORDERS_CONNECTION_CLOSED,\r\n    payload: any\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport type TProfileOrdersActions =\r\n    IWS_ORDERS_CONNECTION_CLOSED |\r\n    IWS_ORDERS_CONNECTION_ERROR |\r\n    IWS_ORDERS_CONNECTION_START |\r\n    IWS_ORDERS_GET_MESSAGE |\r\n    IWS_ORDERS_SEND_MESSAGE |\r\n    IWS_ORDERS_CONNECTION_SUCCESS","import React, {FC, useEffect, useMemo} from 'react';\r\nimport styles from './profile-orders.module.css'\r\nimport {NavLink, useNavigate} from \"react-router-dom\";\r\nimport {logout} from \"../../services/actions/auth\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport FeedItem from \"../../components/feed-item\";\r\nimport {WS_ORDERS_CONNECTION_CLOSED, WS_ORDERS_CONNECTION_START} from \"../../services/actions/profile-orders\";\r\n\r\nconst ProfileOrders: FC<any> = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logOutHandler = (e:React.MouseEvent): void => {\r\n        e.preventDefault()\r\n        dispatch(logout({token: localStorage.getItem('refreshToken') ?? ''}))\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const orders = useSelector(store => store.profileOrders.orders)\r\n\r\n    function feedClickHandler(id: string){\r\n        navigate(`/profile/orders/${id}`, {state: {feedBackground: '/profile/orders'}})\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({type: WS_ORDERS_CONNECTION_START})\r\n        return () => {\r\n            dispatch({type: WS_ORDERS_CONNECTION_CLOSED})\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container pt-30\">\r\n               <div className={styles.profileOrdersContent}>\r\n                   <div className={`${styles.aside} mr-15`}>\r\n                       <div className={`${styles.asideMenus} mb-20`}>\r\n                           <NavLink className={`${styles.asideLink} text text_type_main-medium`} to={\"/profile\"}>Профиль</NavLink>\r\n                           <NavLink className={`${styles.asideLink} text text_type_main-medium`} to={\"/profile/orders\"}>История заказов</NavLink>\r\n                           <a href=\"/\" onClick={logOutHandler} className={`${styles.asideLink} text text_type_main-medium`}>Выход</a>\r\n                       </div>\r\n                       <span className={\"d-block text text_type_main-default text_color_inactive\"}>\r\n                            В этом разделе вы можете просмотреть свою историю заказов\r\n                       </span>\r\n                   </div>\r\n                   <div className={styles.orders}>\r\n                       {orders.map(item => (\r\n                           <FeedItem key={Math.random() * 10000 + item._id} onClick={feedClickHandler} isShowStatus={true} {...item} />\r\n                       ))}\r\n                   </div>\r\n               </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ProfileOrders;","\r\nexport const  WS_FEED_CONNECTION_CLOSED = 'WS_FEED_CONNECTION_CLOSED'\r\nexport const WS_FEED_CONNECTION_ERROR = 'WS_FEED_CONNECTION_ERROR'\r\nexport const  WS_FEED_CONNECTION_START = 'WS_FEED_CONNECTION_START'\r\nexport const   WS_FEED_CONNECTION_SUCCESS = 'WS_FEED_CONNECTION_SUCCESS'\r\nexport const WS_FEED_GET_MESSAGE = 'WS_FEED_GET_MESSAGE'\r\nexport const  WS_FEED_SEND_MESSAGE = 'WS_FEED_SEND_MESSAGE'\r\n\r\ninterface IWS_FEED_CONNECTION_CLOSED {\r\n    readonly type: typeof WS_FEED_CONNECTION_CLOSED,\r\n    payload?: any\r\n}\r\ninterface IWS_FEED_CONNECTION_ERROR {\r\n    readonly type: typeof WS_FEED_CONNECTION_ERROR,\r\n    payload: any\r\n}\r\ninterface IWS_FEED_CONNECTION_START {\r\n    readonly type: typeof WS_FEED_CONNECTION_START,\r\n}\r\ninterface IWS_FEED_CONNECTION_SUCCESS {\r\n    readonly type: typeof WS_FEED_CONNECTION_SUCCESS,\r\n    payload: any\r\n}\r\ninterface IWS_FEED_GET_MESSAGE {\r\n    readonly type: typeof WS_FEED_GET_MESSAGE,\r\n    payload: any\r\n}\r\ninterface IWS_FEED_SEND_MESSAGE {\r\n    readonly type: typeof WS_FEED_CONNECTION_CLOSED,\r\n    payload: any\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport type TFeedActions =\r\n    IWS_FEED_CONNECTION_CLOSED |\r\n    IWS_FEED_CONNECTION_ERROR |\r\n    IWS_FEED_CONNECTION_START |\r\n    IWS_FEED_GET_MESSAGE |\r\n    IWS_FEED_SEND_MESSAGE |\r\n    IWS_FEED_CONNECTION_SUCCESS\r\n","import React, {FC, useEffect} from 'react';\r\nimport styles from './feed.module.css'\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport FeedItem from \"../../components/feed-item\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {WS_FEED_CONNECTION_CLOSED, WS_FEED_CONNECTION_START} from \"../../services/actions/feed\";\r\nimport {TAppDispatch} from \"../../utils/constants\";\r\n\r\nconst Feed: FC<any> = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {orders, totalSum, totalTodaySum} = useSelector(store => store.feed)\r\n\r\n    function feedClickHandler(id: string){\r\n        navigate(`/feed/${id}`, {state: {feedBackground: '/feed'}})\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({type: WS_FEED_CONNECTION_START})\r\n        return () => {\r\n            dispatch({type: WS_FEED_CONNECTION_CLOSED})\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container pt-20\">\r\n                <h1 className=\"text text_type_main-large mb-5\">Лента заказов</h1>\r\n               <div className={styles.feedContent}>\r\n                   <div className={styles.orders}>\r\n                       {orders.map(item => (\r\n                           <FeedItem key={item._id + Math.random() * 10000} onClick={feedClickHandler} isShowStatus={false} {...item} />\r\n                       ))}\r\n                   </div>\r\n                   <div className={styles.feedInfo}>\r\n                        <div className={styles.feedReadiness}>\r\n                            <div className={styles.feedReady}>\r\n                                <span className=\"text text_type_main-medium mb-6\">Готовы:</span>\r\n                                {orders.filter(item => item.status === 'done').slice(0, 5).map(item => (\r\n                                    <h5 key={item._id + Math.random() * 10000} className=\"text text_type_main-default\">{item.number}</h5>\r\n                                ))}\r\n                            </div>\r\n                            <div className={styles.feedPending}>\r\n                                <span className=\"text text_type_main-medium mb-6\">В работе:</span>\r\n                                {orders.filter(item => item.status === 'pending').slice(0, 5).map(item => (\r\n                                    <h5 key={item._id + Math.random() * 10000} className=\"text text_type_main-default\">{item.number}</h5>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                       <h5 className={\"text text_type_main-medium\"}>Выполнено за все время:</h5>\r\n                       <h5 className={\"text text_type_digits-large mb-15\"}>{totalSum}</h5>\r\n                       <h5 className={\"text text_type_main-medium\"}>Выполнено за сегодня:</h5>\r\n                       <h5 className={\"text text_type_digits-large mb-15\"}>{totalTodaySum}</h5>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Feed;","import React, {useEffect, useMemo} from 'react';\r\nimport styles from \"./feed-item.module.css\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {TFeed, TIngredient} from \"../../utils/constants\";\r\nimport {WS_FEED_CONNECTION_CLOSED, WS_FEED_CONNECTION_START} from \"../../services/actions/feed\";\r\n\r\nconst FeedItem = () => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const allIngredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const feed = useSelector(state => state.feed.orders)\r\n\r\n    const activeFeed = useMemo<TFeed | undefined>(() => {\r\n        return feed.find((item:TFeed) => item._id === id)\r\n    }, [id,feed])\r\n\r\n    const feedIngredients: TIngredient[] = useMemo(() => {\r\n        return allIngredients.filter((ingredient: TIngredient) => activeFeed?.ingredients.find(orderIngredient => ingredient._id === orderIngredient))\r\n    }, [allIngredients, activeFeed])\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return feedIngredients.reduce((acc, item) => acc += item.price, 0)\r\n    }, [feedIngredients])\r\n\r\n    useEffect(() => {\r\n        dispatch({type: WS_FEED_CONNECTION_START})\r\n        return () => {\r\n            dispatch({type: WS_FEED_CONNECTION_CLOSED})\r\n        }\r\n    }, [])\r\n\r\n    return activeFeed ? (\r\n        <main>\r\n            <div className={\"container pt-30\"}>\r\n                <div className={styles.feedItem}>\r\n                    <h5 className={ styles.feedNumber + \"text text_type_main-default mb-5\"}>#{activeFeed?.number}</h5>\r\n                    <h3 className={\"text text_type_main-medium mb-2\"}>{activeFeed?.name}</h3>\r\n                    <h5\r\n                          className={\"text text_type_main-small mb-15\"}>\r\n                        {\r\n                            activeFeed?.status === 'created' ? 'Создан' :\r\n                                activeFeed?.status === 'done' ? 'Выполнен' :\r\n                                    'Готовится'\r\n                        }\r\n                    </h5>\r\n                    <h4 className={\"text text_type_main-medium mb-6\"}>Состав:</h4>\r\n                    <div className={`${styles.feedIngredients} mb-10`}>\r\n                        {feedIngredients.map(item => (\r\n                            <div className={styles.feedIngredient}>\r\n                                <div className={styles.feedImageContainer}>\r\n                                    <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                                </div>\r\n                                <span className={\"text text_type_main-default\"}>{item.name}</span>\r\n                                <div className={`${styles.count} mb-1`}>\r\n                                    <span className={`${styles.countText} mr-2 text text_type_digits-default`}>1 x {item[\"price\"]}</span>\r\n                                    <CurrencyIcon type=\"primary\" />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.bottom}>\r\n                        <span className={\"text text_type_main-default text_color_inactive\"}>{activeFeed && new Date(activeFeed.createdAt).toLocaleString()}</span>\r\n                        <div className={`${styles.count} mb-1`}>\r\n                            <span className={`${styles.countText} mr-2 text text_type_digits-default`}>{orderPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    ): null\r\n}\r\n\r\nexport default FeedItem;","import React, {FC, useMemo} from 'react';\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {TFeed, TIngredient} from \"../../utils/constants\";\r\nimport Modal from \"../modal/modal\";\r\nimport styles from './modal-feed.module.css'\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ninterface IModalFeedProps{\r\n    isOpen: boolean,\r\n}\r\n\r\nconst ModalFeed: FC<IModalFeedProps> = ({isOpen}) => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const allIngredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const feed = useSelector(state => state.feed.orders)\r\n\r\n    const activeFeed = useMemo<TFeed | undefined>(() => {\r\n        return feed.find((item:TFeed) => item._id === id)\r\n    }, [id,feed])\r\n\r\n    const feedIngredients: TIngredient[] = useMemo(() => {\r\n        return allIngredients.filter((ingredient: TIngredient) => activeFeed?.ingredients.find(orderIngredient => ingredient._id === orderIngredient))\r\n    }, [allIngredients, activeFeed])\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return feedIngredients.reduce((acc, item) => acc += item.price, 0)\r\n    }, [feedIngredients])\r\n\r\n    function toggleFeedModal(): void{\r\n        navigate('/feed')\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} headerSize={'default'} headerText={`#${activeFeed?.number}`} toggleModal={toggleFeedModal}>\r\n            {activeFeed && (\r\n                <div>\r\n                    <h3 className={\"text text_type_main-medium mb-2\"}>{activeFeed.name}</h3>\r\n                    <h5>\r\n                          className={\"text text_type_main-small mb-15\"}\r\n                        {\r\n                            activeFeed.status === 'created' ? 'Создан' :\r\n                            activeFeed.status === 'done' ? 'Выполнен' :\r\n                            'Готовится'\r\n                        }\r\n                    </h5>\r\n                    <h4 className={\"text text_type_main-medium mb-6\"}>Состав:</h4>\r\n                    <div className={`${styles.feedIngredients} mb-10`}>\r\n                        {feedIngredients.map((item, index) => (\r\n                            <div key={item._id + index} className={styles.feedIngredient}>\r\n                                <div className={styles.feedImageContainer}>\r\n                                    <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                                </div>\r\n                                <span className={\"text text_type_main-default\"}>{item.name}</span>\r\n                                <div className={`${styles.count} mb-1`}>\r\n                                    <span className={`${styles.countText} mr-2 text text_type_digits-default`}>1 x {item[\"price\"]}</span>\r\n                                    <CurrencyIcon type=\"primary\" />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.bottom}>\r\n                        <span className={\"text text_type_main-default text_color_inactive\"}>{new Date(activeFeed.createdAt).toLocaleString()}</span>\r\n                        <div className={`${styles.count} mb-1`}>\r\n                            <span className={`${styles.countText} mr-2 text text_type_digits-default`}>{orderPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalFeed;","import React, {useEffect, useMemo} from 'react';\r\nimport styles from \"../feed-item/feed-item.module.css\";\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"../../utils/hooks\";\r\nimport {TFeed, TIngredient} from \"../../utils/constants\";\r\nimport {WS_ORDERS_CONNECTION_CLOSED, WS_ORDERS_CONNECTION_START} from \"../../services/actions/profile-orders\";\r\n\r\nconst ProfileOrdersItem = () => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const allIngredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const feed = useSelector(state => state.profileOrders.orders)\r\n\r\n    const activeFeed = useMemo<TFeed | undefined>(() => {\r\n        return feed.find((item:TFeed) => item._id === id)\r\n    }, [id,feed])\r\n\r\n    const feedIngredients: TIngredient[] = useMemo(() => {\r\n        return allIngredients.filter((ingredient: TIngredient) => activeFeed?.ingredients.find(orderIngredient => ingredient._id === orderIngredient))\r\n    }, [allIngredients, activeFeed])\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return feedIngredients.reduce((acc, item) => acc += item.price, 0)\r\n    }, [feedIngredients])\r\n\r\n    useEffect(() => {\r\n        dispatch({type: WS_ORDERS_CONNECTION_START})\r\n        return () => {\r\n            dispatch({type: WS_ORDERS_CONNECTION_CLOSED})\r\n        }\r\n    }, [])\r\n\r\n    return activeFeed ? (\r\n        <main>\r\n            <div className={\"container pt-30\"}>\r\n                <div className={styles.feedItem}>\r\n                    <span className={ styles.feedNumber + \"text text_type_main-default mb-5\"}>#{activeFeed?.number}</span>\r\n                    <h3 className={\"text text_type_main-medium mb-2\"}>{activeFeed?.name}</h3>\r\n                    <h5\r\n                          className={\"text text_type_main-small mb-15\"}>\r\n                        {\r\n                            activeFeed?.status === 'created' ? 'Создан' :\r\n                                activeFeed?.status === 'done' ? 'Выполнен' :\r\n                                    'Готовится'\r\n                        }\r\n                    </h5>\r\n                    <h4 className={\"text text_type_main-medium mb-6\"}>Состав:</h4>\r\n                    <div className={`${styles.feedIngredients} mb-10`}>\r\n                        {feedIngredients.map(item => (\r\n                            <div className={styles.feedIngredient}>\r\n                                <div className={styles.feedImageContainer}>\r\n                                    <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                                </div>\r\n                                <span className={\"text text_type_main-default\"}>{item.name}</span>\r\n                                <div className={`${styles.count} mb-1`}>\r\n                                    <span className={`${styles.countText} mr-2 text text_type_digits-default`}>1 x {item[\"price\"]}</span>\r\n                                    <CurrencyIcon type=\"primary\" />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.bottom}>\r\n                        <span className={\"text text_type_main-default text_color_inactive\"}>{activeFeed && new Date(activeFeed.createdAt).toLocaleString()}</span>\r\n                        <div className={`${styles.count} mb-1`}>\r\n                            <span className={`${styles.countText} mr-2 text text_type_digits-default`}>{orderPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    ): null\r\n}\r\n\r\nexport default ProfileOrdersItem;","import React, {FC, useMemo} from 'react';\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"../../utils/hooks\";\r\nimport {TFeed, TIngredient} from \"../../utils/constants\";\r\nimport Modal from \"../modal/modal\";\r\nimport styles from './modal-profile-order.module.css'\r\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\n\r\ninterface IModalFeedProps{\r\n    isOpen: boolean,\r\n}\r\n\r\nconst ModalProfileOrder: FC<IModalFeedProps> = ({isOpen}) => {\r\n\r\n    const {id} = useParams()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const allIngredients = useSelector((state) => state.ingredients.ingredients)\r\n\r\n    const feed = useSelector(state => state.profileOrders.orders)\r\n\r\n    const activeFeed = useMemo<TFeed | undefined>(() => {\r\n        return feed.find((item:TFeed) => item._id === id)\r\n    }, [id,feed])\r\n\r\n    const feedIngredients: TIngredient[] = useMemo(() => {\r\n        return allIngredients.filter((ingredient: TIngredient) => activeFeed?.ingredients.find(orderIngredient => ingredient._id === orderIngredient))\r\n    }, [allIngredients, activeFeed])\r\n\r\n    const orderPrice = useMemo(() => {\r\n        return feedIngredients.reduce((acc, item) => acc += item.price, 0)\r\n    }, [feedIngredients])\r\n\r\n    function toggleFeedModal(): void{\r\n        navigate('/profile/orders')\r\n    }\r\n\r\n    return activeFeed ? (\r\n        <Modal isOpen={isOpen} headerSize={'default'} headerText={`#${activeFeed?.number}`} toggleModal={toggleFeedModal}>\r\n                <div>\r\n                    <h3 className={\"text text_type_main-medium mb-2\"}>{activeFeed.name}</h3>\r\n                    <span className={styles.status + \" text text_type_main-small mb-15\"}>\r\n                        {\r\n                            activeFeed.status === 'created' ? 'Создан' :\r\n                            activeFeed.status === 'done' ? 'Выполнен' :\r\n                            'Готовится'\r\n                        }\r\n                    </span>\r\n                    <h4 className={\"text text_type_main-medium mb-6\"}>Состав:</h4>\r\n                    <div className={`${styles.feedIngredients} mb-10`}>\r\n                        {feedIngredients.map((item, index) => (\r\n                            <div key={item._id + index} className={styles.feedIngredient}>\r\n                                <div className={styles.feedImageContainer}>\r\n                                    <img className={styles.feedImage} src={item.image} alt=\"\"/>\r\n                                </div>\r\n                                <span className={\"text text_type_main-default\"}>{item.name}</span>\r\n                                <div className={`${styles.count} mb-1`}>\r\n                                    <span className={`${styles.countText} mr-2 text text_type_digits-default`}>1 x {item[\"price\"]}</span>\r\n                                    <CurrencyIcon type=\"primary\" />\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className={styles.bottom}>\r\n                        <span className={\"text text_type_main-default text_color_inactive\"}>{new Date(activeFeed.createdAt).toLocaleString()}</span>\r\n                        <div className={`${styles.count} mb-1`}>\r\n                            <span className={`${styles.countText} mr-2 text text_type_digits-default`}>{orderPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </Modal>\r\n    ) : null\r\n};\r\n\r\nexport default ModalProfileOrder;","import React, {useEffect} from 'react';\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport {BrowserRouter as Router, Routes, Route, useLocation} from \"react-router-dom\";\r\nimport Home from \"../../pages/home\";\r\nimport Login from \"../../pages/login\";\r\nimport Register from \"../../pages/register\";\r\nimport ForgotPassword from \"../../pages/forgot-password\";\r\nimport ResetPassword from \"../../pages/reset-password\";\r\nimport Profile from \"../../pages/profile\";\r\nimport Ingredient from \"../../pages/ingredient\";\r\nimport PageNotFound from \"../../pages/page-not-found\";\r\nimport {ProtectedRoute} from \"../protected-route/protected-route\";\r\nimport ModalIngredient from \"../modal-ingredient/modal-ingredient\";\r\nimport {getIngredients} from \"../../services/actions/ingredients\";\r\nimport {useDispatch} from \"../../utils/hooks\";\r\nimport ProfileOrders from \"../../pages/profile-orders\";\r\nimport Feed from \"../../pages/feed\";\r\nimport FeedItem from \"../../pages/feed-item\";\r\nimport ModalFeed from \"../modal-feed\";\r\nimport ProfileOrdersItem from \"../../pages/profile-orders-item\";\r\nimport ModalProfileOrder from \"../modal-profile-order\";\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getIngredients())\r\n    }, [dispatch])\r\n    return (\r\n        <div className=\"app\">\r\n            <Router >\r\n                <AppHeader/>\r\n                <AppRoutes/>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AppRoutes () {\r\n    const location = useLocation()\r\n    const background = location.state?.background\r\n    const feedBackground = location.state?.feedBackground\r\n    return (\r\n        <>\r\n            <Routes location={background ?? feedBackground ?? location}>\r\n                <Route path=\"/\" element={<Home/>}/>\r\n                <Route path=\"/login\" element={<Login/>}/>\r\n                <Route path=\"/register\" element={<Register/>}/>\r\n                <Route path=\"/forgot-password\" element={<ForgotPassword/>}/>\r\n                <Route path=\"/reset-password\" element={<ResetPassword/>}/>\r\n                <Route path=\"/feed\" element={<Feed/>}/>\r\n                <Route path=\"/feed/:id\" element={<FeedItem/>}/>\r\n                <Route  path='/profile' element={<ProtectedRoute/>}>\r\n                    <Route  path='/profile' element={<Profile/>}/>\r\n                    <Route  path='/profile/orders' element={<ProfileOrders/>}/>\r\n                    <Route  path='/profile/orders/:id' element={<ProfileOrdersItem/>}/>\r\n                </Route>\r\n                <Route path=\"/ingredients/:id\" element={<Ingredient/>}/>\r\n                <Route element={<PageNotFound/>}/>\r\n            </Routes>\r\n            <Routes>\r\n                {background && <Route path=\"/ingredients/:id\" element={<ModalIngredient isOpen={Boolean(background)}/>}/>}\r\n            </Routes>\r\n            <Routes>\r\n                {feedBackground && <Route path=\"/feed/:id\" element={<ModalFeed isOpen={Boolean(feedBackground)}/>}/>}\r\n                {feedBackground && <Route path=\"/profile/orders/:id\" element={<ModalProfileOrder isOpen={Boolean(feedBackground)}/>}/>}\r\n            </Routes>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    GET_INGREDIENTS,\r\n    GET_INGREDIENTS_FAILED,\r\n    GET_INGREDIENTS_SUCCESS, TIngredientActions,\r\n} from \"../actions/ingredients\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\ntype TIngredientsState = {\r\n    ingredientsRequest: boolean,\r\n    ingredientsFailed: boolean,\r\n    ingredients: TIngredient[]\r\n}\r\n\r\nconst initialState: TIngredientsState = {\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredients: []\r\n}\r\n\r\nexport const ingredientsReducer = (state=initialState, action:TIngredientActions): TIngredientsState => {\r\n    switch (action.type){\r\n        case GET_INGREDIENTS:{\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true,\r\n                ingredientsFailed: false\r\n            }\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                ingredients: action.payload,\r\n                ingredientsRequest: false\r\n            }\r\n        }\r\n        case GET_INGREDIENTS_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                ingredientsFailed: true\r\n            }\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import {\r\n    ADD_CONSTRUCTOR_BUN,\r\n    REPLACE_CONSTRUCTOR_BUN,\r\n    ADD_CONSTRUCTOR_INGREDIENT, CHANGE_CONSTRUCTOR_INGREDIENT_POSITION,\r\n    REMOVE_CONSTRUCTOR_INGREDIENT, CLEAR_CONSTRUCTOR, TConstructorIngredientsActions\r\n} from \"../actions/constructor-ingredients\";\r\nimport {TIngredient} from \"../../utils/constants\";\r\n\r\ntype TIngredientsState = {\r\n    ingredients: Array<TIngredient>,\r\n    bun: TIngredient | null\r\n}\r\n\r\nconst initialState: TIngredientsState = {\r\n    ingredients: [],\r\n    bun: null\r\n}\r\n\r\nexport const constructorReducer = (state = initialState, action: TConstructorIngredientsActions): TIngredientsState => {\r\n    switch(action.type){\r\n        case ADD_CONSTRUCTOR_INGREDIENT:{\r\n            const item = {...action.payload, key:Math.floor(Math.random()*10000)}\r\n            return{\r\n                ...state,\r\n                ingredients: [...state.ingredients, item]\r\n            }\r\n        }\r\n        case ADD_CONSTRUCTOR_BUN:{\r\n            return {\r\n                ...state,\r\n                bun: action.payload\r\n            }\r\n        }\r\n        case REPLACE_CONSTRUCTOR_BUN:{\r\n            return {\r\n                ...state,\r\n                bun: action.payload\r\n            }\r\n        }\r\n        case REMOVE_CONSTRUCTOR_INGREDIENT :{\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients].filter(item => item['key'] !== action.payload)\r\n            }\r\n        }\r\n        case CHANGE_CONSTRUCTOR_INGREDIENT_POSITION:{\r\n            const ingredients = [...state.ingredients];\r\n            ingredients.splice(action.payload.hoverIndex, 0, ingredients.splice(action.payload.dragIndex, 1)[0]);\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients\r\n            }\r\n        }\r\n        case CLEAR_CONSTRUCTOR: {\r\n            return initialState\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","\r\nimport {SET_ACTIVE_INGREDIENT, TIngredientDetailsActions} from \"../actions/ingredient-details\";\r\n\r\nconst initialState = {}\r\n\r\nexport const ingredientDetailsReducer = (state = initialState, action:TIngredientDetailsActions) => {\r\n    switch(action.type){\r\n        case SET_ACTIVE_INGREDIENT: {\r\n            return action.payload\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {ORDER_FAILED, ORDER_SUCCESS, TAKE_ORDER, TOrderActions} from \"../actions/order-details\";\r\n\r\ntype TOrderDetailsState = {\r\n    orderDetailsRequest: boolean,\r\n    orderDetailsFailed: boolean,\r\n    orderDetails: any\r\n}\r\n\r\nconst initialState: TOrderDetailsState = {\r\n    orderDetailsRequest: false,\r\n    orderDetailsFailed: false,\r\n    orderDetails: null\r\n}\r\nexport const orderDetailsReducer = (state = initialState, action:TOrderActions): TOrderDetailsState => {\r\n    switch(action.type){\r\n        case TAKE_ORDER :{\r\n            return {\r\n                ...state,\r\n                orderDetailsRequest: true,\r\n                orderDetailsFailed: false\r\n            }\r\n        }\r\n        case ORDER_SUCCESS :{\r\n            return {\r\n                ...state,\r\n                orderDetailsRequest: false,\r\n                orderDetails: action.payload\r\n            }\r\n        }\r\n        case ORDER_FAILED :{\r\n            return {\r\n                ...initialState,\r\n                orderDetailsRequest: false,\r\n                orderDetailsFailed: true,\r\n            }\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_REQUEST_FAILED,\r\n    LOGOUT_REQUEST_SUCCESS,\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    REGISTER_REQUEST,\r\n    REGISTER_REQUEST_FAILED,\r\n    REGISTER_REQUEST_SUCCESS, TAuthActions\r\n} from \"../actions/auth\";\r\nimport {getCookie, setCookie} from \"../../utils/utils\";\r\n\r\ntype TAuthState = {\r\n    registerRequest: boolean,\r\n    registerFailed: boolean,\r\n    loginRequest: boolean,\r\n    loginFailed: boolean,\r\n    logoutFailed: boolean,\r\n    logoutRequest: boolean,\r\n    isAuth: boolean\r\n}\r\n\r\nconst initialState: TAuthState = {\r\n    registerRequest: false,\r\n    registerFailed: false,\r\n    loginRequest: false,\r\n    loginFailed: false,\r\n    logoutFailed: false,\r\n    logoutRequest: false,\r\n    isAuth: Boolean(getCookie('accessToken'))\r\n}\r\n\r\nexport const authReducer = (state= initialState, action: TAuthActions): TAuthState => {\r\n    switch (action.type){\r\n        case REGISTER_REQUEST:{\r\n            return {\r\n                ...state,\r\n                registerRequest: true,\r\n                registerFailed: false\r\n            }\r\n        }\r\n        case REGISTER_REQUEST_SUCCESS:{\r\n            const authToken = action.payload.accessToken.split('Bearer ')[1];\r\n            if (authToken) {\r\n                // Сохраняем токен в куку token\r\n                setCookie('accessToken', authToken, {expires: 1200});\r\n            }\r\n            localStorage.setItem('refreshToken', action.payload.refreshToken)\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                registerRequest: false\r\n            }\r\n        }\r\n        case REGISTER_REQUEST_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                registerFailed: true\r\n            }\r\n        }\r\n        case LOGIN_REQUEST:{\r\n            return {\r\n                ...state,\r\n                loginRequest: true,\r\n                loginFailed: false\r\n            }\r\n        }\r\n        case LOGIN_REQUEST_SUCCESS:{\r\n            const authToken = action.payload.accessToken.split('Bearer ')[1];\r\n            if (authToken) {\r\n                // Сохраняем токен в куку token\r\n                setCookie('accessToken', authToken, {expires: 1200});\r\n            }\r\n            localStorage.setItem('refreshToken', action.payload.refreshToken)\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                loginRequest: false\r\n            }\r\n        }\r\n        case LOGIN_REQUEST_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                loginFailed: true\r\n            }\r\n        }\r\n        case LOGOUT_REQUEST:{\r\n            return {\r\n                ...state,\r\n                logoutRequest: true,\r\n                logoutFailed: false\r\n            }\r\n        }\r\n        case LOGOUT_REQUEST_SUCCESS:{\r\n            setCookie('accessToken', '', {expires: -1});\r\n            localStorage.removeItem('refreshToken')\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                logoutRequest: false\r\n            }\r\n        }\r\n        case LOGOUT_REQUEST_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                logoutFailed: true\r\n            }\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import {\r\n    GET_PROFILE_REQUEST,\r\n    GET_PROFILE_REQUEST_FAILED,\r\n    GET_PROFILE_REQUEST_SUCCESS, TProfileActions,\r\n    UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_REQUEST_FAILED, UPDATE_PROFILE_REQUEST_SUCCESS\r\n} from \"../actions/profile\";\r\nimport {TUser} from \"../../utils/constants\";\r\n\r\ntype TProfileState = {\r\n    profileRequest: boolean,\r\n    profileFailed: boolean,\r\n    profile: TUser\r\n}\r\n\r\nconst initialState: TProfileState = {\r\n    profileRequest: false,\r\n    profileFailed: false,\r\n    profile: {\r\n        name: '',\r\n        email: ''\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state= initialState, action:TProfileActions): TProfileState => {\r\n    switch (action.type){\r\n        case GET_PROFILE_REQUEST:{\r\n            return {\r\n                ...state,\r\n                profileRequest: true,\r\n                profileFailed: false\r\n            }\r\n        }\r\n        case GET_PROFILE_REQUEST_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                profile: action.payload,\r\n                profileRequest: false\r\n            }\r\n        }\r\n        case GET_PROFILE_REQUEST_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                profileFailed: true\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_REQUEST:{\r\n            return {\r\n                ...state,\r\n                profileRequest: true,\r\n                profileFailed: false\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_REQUEST_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                profile: action.payload,\r\n                profileRequest: false\r\n            }\r\n        }\r\n        case UPDATE_PROFILE_REQUEST_FAILED:{\r\n            return {\r\n                ...initialState,\r\n                profileFailed: true\r\n            }\r\n        }\r\n        default:{\r\n            return state\r\n        }\r\n    }\r\n}","import {TFeed} from \"../../utils/constants\";\r\nimport {\r\n    TProfileOrdersActions, WS_ORDERS_CONNECTION_CLOSED,\r\n    WS_ORDERS_CONNECTION_ERROR,\r\n    WS_ORDERS_CONNECTION_SUCCESS, WS_ORDERS_GET_MESSAGE\r\n} from \"../actions/profile-orders\";\r\n\r\ntype TProfileOrdersState = {\r\n    wsOrdersConnected: boolean,\r\n    orders: TFeed[],\r\n    totalSum: number,\r\n    totalTodaySum: number\r\n}\r\n\r\nconst initialState: TProfileOrdersState = {\r\n    wsOrdersConnected: false,\r\n    orders: [],\r\n    totalSum: 0,\r\n    totalTodaySum: 0,\r\n}\r\n\r\nexport const profileOrdersReducer = (state= initialState, action:TProfileOrdersActions): TProfileOrdersState => {\r\n    switch (action.type) {\r\n        case WS_ORDERS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: true\r\n            };\r\n\r\n        case WS_ORDERS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: false\r\n            };\r\n\r\n        case WS_ORDERS_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: false\r\n            };\r\n\r\n        case WS_ORDERS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                totalSum: action.payload.total,\r\n                totalTodaySum: action.payload.totalToday\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {TFeed} from \"../../utils/constants\";\r\nimport {\r\n    TFeedActions,\r\n    WS_FEED_CONNECTION_CLOSED,\r\n    WS_FEED_CONNECTION_ERROR,\r\n    WS_FEED_CONNECTION_SUCCESS,\r\n    WS_FEED_GET_MESSAGE\r\n} from \"../actions/feed\";\r\n\r\ntype TFeedState = {\r\n    wsOrdersConnected: boolean,\r\n    orders: TFeed[],\r\n    totalSum: number,\r\n    totalTodaySum: number,\r\n}\r\n\r\nconst initialState: TFeedState = {\r\n    wsOrdersConnected: false,\r\n    orders: [],\r\n    totalSum: 0,\r\n    totalTodaySum: 0,\r\n}\r\n\r\nexport const feedReducer = (state= initialState, action:TFeedActions): TFeedState => {\r\n    switch (action.type) {\r\n        case WS_FEED_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: true\r\n            };\r\n\r\n        case WS_FEED_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: false\r\n            };\r\n\r\n        case WS_FEED_CONNECTION_CLOSED:\r\n            return {\r\n                ...state,\r\n                wsOrdersConnected: false\r\n            };\r\n\r\n        case WS_FEED_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                orders: action.payload.orders,\r\n                totalSum: action.payload.total,\r\n                totalTodaySum: action.payload.totalToday\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ingredientsReducer} from \"./ingredients\";\r\nimport {combineReducers} from \"redux\";\r\nimport {constructorReducer} from \"./constructor-ingredients\";\r\nimport {ingredientDetailsReducer} from \"./ingredient-details\";\r\nimport {orderDetailsReducer} from \"./order-details\";\r\nimport {authReducer} from \"./auth\";\r\nimport {profileReducer} from \"./profile\";\r\nimport {profileOrdersReducer} from \"./profile-orders\";\r\nimport {feedReducer} from \"./feed\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    profileOrders: profileOrdersReducer,\r\n    constructorIngredients: constructorReducer,\r\n    ingredientDetails: ingredientDetailsReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    feed: feedReducer\r\n})","import {Middleware, MiddlewareAPI} from \"redux\";\r\nimport {getCookie} from \"../../utils/utils\";\r\nimport {TAppDispatch, TRootState} from \"../../utils/constants\";\r\nimport {TAppActions} from \"../../utils/hooks\";\r\n\r\ntype TwsActions = {\r\n    wsInit: string,\r\n    wsSendMessage: string,\r\n    onOpen: string,\r\n    onClose: string,\r\n    onError: string,\r\n    onMessage: string\r\n}\r\n\r\nexport const socketMiddleware = (wsUrl: string, wsActions: TwsActions): Middleware => {\r\n    return (store) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => (action) => {\r\n            const { dispatch } = store;\r\n            const { type, payload } = action;\r\n            const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n            const accessToken = getCookie('accessToken')\r\n            if (type === wsInit && accessToken) {\r\n                socket = new WebSocket(`${wsUrl}?token=${accessToken}`);\r\n            }\r\n            else if(type === wsInit){\r\n                socket = new WebSocket(wsUrl);\r\n\r\n            }\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({ type: onError, payload: event });\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    const { success, ...restParsedData } = parsedData;\r\n\r\n                    dispatch({ type: onMessage, payload: restParsedData });\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n\r\n                if (type === wsSendMessage) {\r\n                    const message = payload;\r\n                    message.token = accessToken\r\n                    socket.send(JSON.stringify(message));        }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport { createStore,compose,applyMiddleware } from 'redux';\r\nimport {rootReducer}  from './services/reducers';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n    WS_ORDERS_CONNECTION_CLOSED, WS_ORDERS_CONNECTION_ERROR,\r\n    WS_ORDERS_CONNECTION_START,\r\n    WS_ORDERS_CONNECTION_SUCCESS, WS_ORDERS_GET_MESSAGE,\r\n    WS_ORDERS_SEND_MESSAGE\r\n} from \"./services/actions/profile-orders\";\r\nimport {socketMiddleware} from \"./services/middlewars/socket-middleware\";\r\nimport {\r\n    WS_FEED_CONNECTION_CLOSED, WS_FEED_CONNECTION_ERROR,\r\n    WS_FEED_CONNECTION_START,\r\n    WS_FEED_CONNECTION_SUCCESS, WS_FEED_GET_MESSAGE,\r\n    WS_FEED_SEND_MESSAGE\r\n} from \"./services/actions/feed\";\r\n\r\nconst composeEnhancers =\r\n    //@ts-ignore\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        //@ts-ignore\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n        : compose;\r\n\r\nexport const wsOrdersActions = {\r\n    wsInit: WS_ORDERS_CONNECTION_START,\r\n    wsSendMessage: WS_ORDERS_SEND_MESSAGE,\r\n    onOpen: WS_ORDERS_CONNECTION_SUCCESS,\r\n    onClose: WS_ORDERS_CONNECTION_CLOSED,\r\n    onError: WS_ORDERS_CONNECTION_ERROR,\r\n    onMessage: WS_ORDERS_GET_MESSAGE\r\n};\r\n\r\nexport const wsFeedActions = {\r\n    wsInit: WS_FEED_CONNECTION_START,\r\n    wsSendMessage: WS_FEED_SEND_MESSAGE,\r\n    onOpen: WS_FEED_CONNECTION_SUCCESS,\r\n    onClose: WS_FEED_CONNECTION_CLOSED,\r\n    onError: WS_FEED_CONNECTION_ERROR,\r\n    onMessage: WS_FEED_GET_MESSAGE\r\n};\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(\r\n    thunk,\r\n    socketMiddleware('wss://norma.nomoreparties.space/orders/all', wsFeedActions),\r\n    socketMiddleware('wss://norma.nomoreparties.space/orders', wsOrdersActions),\r\n    )\r\n);\r\n\r\nexport const store = createStore(rootReducer, enhancer);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"profile_aside__32LDN\",\"asideMenus\":\"profile_asideMenus__3UQ46\",\"asideLink\":\"profile_asideLink__2gidO\",\"profileContent\":\"profile_profileContent__1sbTt\",\"profileOptions\":\"profile_profileOptions__1lVoW\",\"buttons\":\"profile_buttons__1Up9t\",\"cancelButton\":\"profile_cancelButton__1XWzG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"modal-feed_count__1h6Un\",\"feedIngredients\":\"modal-feed_feedIngredients__2mncR\",\"feedImageContainer\":\"modal-feed_feedImageContainer__3nJu8\",\"feedImage\":\"modal-feed_feedImage__3Xjy4\",\"feedIngredient\":\"modal-feed_feedIngredient__3SJRl\",\"bottom\":\"modal-feed_bottom__3ravc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"app-header_mainHeader__1xvHQ\",\"mainNav\":\"app-header_mainNav__3NKd0\",\"menuList\":\"app-header_menuList__11iwn\",\"navItem\":\"app-header_navItem__BB4J-\",\"cabinetLink\":\"app-header_cabinetLink__1I-T9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"profile-orders_aside__11Lwa\",\"asideMenus\":\"profile-orders_asideMenus__1sx76\",\"asideLink\":\"profile-orders_asideLink__3tVEd\",\"profileOrdersContent\":\"profile-orders_profileOrdersContent__1KVK2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsBlock\":\"burger-ingredients_ingredientsBlock__10SOf\",\"tabs\":\"burger-ingredients_tabs__2khlP\",\"ingredientItems\":\"burger-ingredients_ingredientItems__3E-ec\",\"itemsContainer\":\"burger-ingredients_itemsContainer__1j3WJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"login_form__33gsj\",\"formMainText\":\"login_formMainText__bcJgG\",\"buttonContainer\":\"login_buttonContainer__3lgBF\",\"bottomText\":\"login_bottomText__CyfB0\",\"formLink\":\"login_formLink__1LCiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"composition\":\"ingredient-details_composition__26Wrk\",\"compositionItem\":\"ingredient-details_compositionItem__3SfUa\",\"ingredientsModalBody\":\"ingredient-details_ingredientsModalBody__3QS_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedContent\":\"feed_feedContent__1rLFq\",\"feedInfo\":\"feed_feedInfo__11oyx\",\"orders\":\"feed_orders__1gNOy\",\"feedReadiness\":\"feed_feedReadiness__36zeB\",\"feedReady\":\"feed_feedReady__2VuV3\",\"feedPending\":\"feed_feedPending__2E4Y6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__1Ux4z\",\"burger\":\"burger-constructor_burger__2Od8j\",\"innerBurgerContainer\":\"burger-constructor_innerBurgerContainer__3QaEG\",\"offer\":\"burger-constructor_offer__pQOr8\",\"offerPrice\":\"burger-constructor_offerPrice__1sXPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"register_form__QToRb\",\"formMainText\":\"register_formMainText__2tvLW\",\"buttonContainer\":\"register_buttonContainer__3RrSj\",\"bottomText\":\"register_bottomText__3-fbf\",\"formLink\":\"register_formLink__1q_hj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"forgot-password_form__3tFnF\",\"formMainText\":\"forgot-password_formMainText__27mTR\",\"buttonContainer\":\"forgot-password_buttonContainer__2DLvC\",\"bottomText\":\"forgot-password_bottomText__2z0F8\",\"formLink\":\"forgot-password_formLink__2ecco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"reset-password_form__25qKD\",\"formMainText\":\"reset-password_formMainText__3TQ0t\",\"buttonContainer\":\"reset-password_buttonContainer__oGCmX\",\"bottomText\":\"reset-password_bottomText__3n9oj\",\"formLink\":\"reset-password_formLink__EoWcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerCard\":\"burger-ingredients_burgerCard__3brUg\",\"count\":\"burger-ingredients_count__1Q-Pv\",\"titleContainer\":\"burger-ingredients_titleContainer__1MU7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2q_y3\",\"modalHeader\":\"modal_modalHeader__3wDMP\",\"modalClose\":\"modal_modalClose__256CP\",\"showModal\":\"modal_showModal__1AuaK\",\"modalBody\":\"modal_modalBody__387ik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__19QEH\",\"showOverlay\":\"modal-overlay_showOverlay__2Is-Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"innerBurgerElement\":\"constructor-ingredient_innerBurgerElement__1ipLP\",\"dragIcon\":\"constructor-ingredient_dragIcon__3LKwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedItem\":\"feed-item_feedItem__21Wzp\",\"count\":\"feed-item_count__1cAUr\",\"feedIngredients\":\"feed-item_feedIngredients__3GhBj\",\"feedImageContainer\":\"feed-item_feedImageContainer__eKbWm\",\"feedImage\":\"feed-item_feedImage__1KN_Y\",\"feedIngredient\":\"feed-item_feedIngredient__3PYx8\",\"bottom\":\"feed-item_bottom__l0aFb\",\"feedNumber\":\"feed-item_feedNumber__1oc0l\"};"],"sourceRoot":""}